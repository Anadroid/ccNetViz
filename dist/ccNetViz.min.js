



<!DOCTYPE html>
<html lang="en" class=" is-copy-enabled is-u2f-enabled">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    

    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/frameworks-92d354668263723b226099d22b6ff9945593c2bfe41f4403b91481b735f484b0.css" integrity="sha256-ktNUZoJjcjsiYJnSK2/5lFWTwr/kH0QDuRSBtzX0hLA=" media="all" rel="stylesheet" />
    <link crossorigin="anonymous" href="https://assets-cdn.github.com/assets/github-7ec438ba7c15d1510c0d2b3bf1f8c7fcd0f7660c73590fa65e728a279787ca91.css" integrity="sha256-fsQ4unwV0VEMDSs78fjH/ND3ZgxzWQ+mXnKKJ5eHypE=" media="all" rel="stylesheet" />
    
    
    
    

    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    <meta name="viewport" content="width=device-width">
    
    <title>ccNetViz/ccNetViz.min.js at 779597e4ce67ebba0d9e4ca46e0ed55fbf70447f Â· HelikarLab/ccNetViz</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" href="/apple-touch-icon.png">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="/apple-touch-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="/apple-touch-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="/apple-touch-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="/apple-touch-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon-180x180.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="https://avatars1.githubusercontent.com/u/17307008?v=3&amp;s=400" name="twitter:image:src" /><meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="HelikarLab/ccNetViz" name="twitter:title" /><meta content="ccNetViz - JavaScript library for visualization of large-scale network graphs using WebGL" name="twitter:description" />
      <meta content="https://avatars1.githubusercontent.com/u/17307008?v=3&amp;s=400" property="og:image" /><meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="HelikarLab/ccNetViz" property="og:title" /><meta content="https://github.com/HelikarLab/ccNetViz" property="og:url" /><meta content="ccNetViz - JavaScript library for visualization of large-scale network graphs using WebGL" property="og:description" />
      <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">
    <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="web-socket" href="wss://live.github.com/_sockets/MTczMDcwMDg6MDY5OGUwNDYyNWU3ZTMxYzJlMGY1YzE1OWY1ZWM5MmE6NGU4OTA4MjVkYTNjZjYzZGM2MjA3MTUxNjdkODRkNGI1NWVjN2IzNzVlYzJiOWE0ZDI3ZTQxMmIwYzYzNTUzOA==--6f8db893f0a6da0403c49178225e0a15c6882305">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">
    <meta name="request-id" content="6CA7272F:1CD3:1C74220D:58367447" data-pjax-transient>

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
<meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-analytics" content="UA-3769691-2">

<meta content="collector.githubapp.com" name="octolytics-host" /><meta content="github" name="octolytics-app-id" /><meta content="6CA7272F:1CD3:1C74220D:58367447" name="octolytics-dimension-request_id" /><meta content="17307008" name="octolytics-actor-id" /><meta content="HelikarLab" name="octolytics-actor-login" /><meta content="fac1104e26d75abf40252b2ee6197dc93398a38749edf3fa8938ee1efff21b1a" name="octolytics-actor-hash" />
<meta content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" name="analytics-location" />



  <meta class="js-ga-set" name="dimension1" content="Logged In">



        <meta name="hostname" content="github.com">
    <meta name="user-login" content="HelikarLab">

        <meta name="expected-hostname" content="github.com">
      <meta name="js-proxy-site-detection-payload" content="NGEzM2FjMWIwNzE2ODMwMDVhYzliMzE2ZDljNGE1YjdlMDdkNWY2MTIyODg1ZGFlMzFkYmE3OTM0MjY3ZDkwNnx7InJlbW90ZV9hZGRyZXNzIjoiMTA4LjE2Ny4zOS40NyIsInJlcXVlc3RfaWQiOiI2Q0E3MjcyRjoxQ0QzOjFDNzQyMjBEOjU4MzY3NDQ3IiwidGltZXN0YW1wIjoxNDc5OTYzNzIxLCJob3N0IjoiZ2l0aHViLmNvbSJ9">


      <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
      <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">

    <meta name="html-safe-nonce" content="afe01d8da6ba45015342d20dfa110773b32b3cd8">
    <meta content="8b1493934c9120103827afc779fa54afbdea4966" name="form-nonce" />

    <meta http-equiv="x-pjax-version" content="bd4e04a76ea53beeba5327650d7c8e7b">
    

      
  <meta name="description" content="ccNetViz - JavaScript library for visualization of large-scale network graphs using WebGL">
  <meta name="go-import" content="github.com/HelikarLab/ccNetViz git https://github.com/HelikarLab/ccNetViz.git">

  <meta content="17307008" name="octolytics-dimension-user_id" /><meta content="HelikarLab" name="octolytics-dimension-user_login" /><meta content="51974774" name="octolytics-dimension-repository_id" /><meta content="HelikarLab/ccNetViz" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="51974774" name="octolytics-dimension-repository_network_root_id" /><meta content="HelikarLab/ccNetViz" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/HelikarLab/ccNetViz/commits/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f.atom" rel="alternate" title="Recent Commits to ccNetViz:779597e4ce67ebba0d9e4ca46e0ed55fbf70447f" type="application/atom+xml">


      <link rel="canonical" href="https://github.com/HelikarLab/ccNetViz/blob/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js" data-pjax-transient>
  </head>


  <body class="logged-in  env-production windows vis-public page-blob">
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>

    
    
    



        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg aria-hidden="true" class="octicon octicon-mark-github" height="28" version="1.1" viewBox="0 0 16 16" width="28"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>


        <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/HelikarLab/ccNetViz/search" class="js-site-search-form" data-scoped-search-url="/HelikarLab/ccNetViz/search" data-unscoped-search-url="/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <label class="form-control header-search-wrapper js-chromeless-input-container">
      <div class="header-search-scope">This repository</div>
      <input type="text"
        class="form-control header-search-input js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s"
        name="q"
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off">
    </label>
</form></div>


      <ul class="header-nav float-left" role="navigation">
        <li class="header-nav-item">
          <a href="/pulls" aria-label="Pull requests you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:pulls context:user" data-hotkey="g p" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls">
            Pull requests
</a>        </li>
        <li class="header-nav-item">
          <a href="/issues" aria-label="Issues you created" class="js-selected-navigation-item header-nav-link" data-ga-click="Header, click, Nav menu - item:issues context:user" data-hotkey="g i" data-selected-links="/issues /issues/assigned /issues/mentioned /issues">
            Issues
</a>        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com/" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
      </ul>

    
<ul class="header-nav user-nav float-right" id="user-links">
  <li class="header-nav-item">
    

  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link tooltipped tooltipped-s js-menu-target" href="/new"
       aria-label="Create newâ¦"
       data-ga-click="Header, create new, icon:add">
      <svg aria-hidden="true" class="octicon octicon-plus float-left" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5z"/></svg>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="HelikarLab/ccNetViz">This repository</span>
  </div>
    <a class="dropdown-item" href="/HelikarLab/ccNetViz/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>
    <a class="dropdown-item" href="/HelikarLab/ccNetViz/settings/collaboration" data-ga-click="Header, create new collaborator">
      New collaborator
    </a>

      </ul>
    </div>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name tooltipped tooltipped-sw js-menu-target" href="/HelikarLab"
       aria-label="View profile and more"
       data-ga-click="Header, show menu, icon:avatar">
      <img alt="@HelikarLab" class="avatar" height="20" src="https://avatars1.githubusercontent.com/u/17307008?v=3&amp;s=40" width="20" />
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      <div class="dropdown-menu dropdown-menu-sw">
        <div class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">HelikarLab</strong>
        </div>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/HelikarLab" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a>
        <a class="dropdown-item" href="/HelikarLab?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a>
        <a class="dropdown-item" href="/explore" data-ga-click="Header, go to explore, text:explore">
          Explore
        </a>
          <a class="dropdown-item" href="/integrations" data-ga-click="Header, go to integrations, text:integrations">
            Integrations
          </a>
        <a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a>

        <div class="dropdown-divider"></div>

        <a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a>

        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/logout" class="logout-form" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="zl0e8hHGvLIIEvT1oT8LPwjRwurnnJHydNe/kK/kO6K1EnH3ueQoYykN0TYfLBU/9QpPfHWXn2dxBn2VDDFLZQ==" /></div>
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </li>
</ul>


    
  </div>
</div>


      


    <div id="start-of-content" class="accessibility-aid"></div>

      <div id="js-flash-container">
</div>


    <div role="main">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode">
    <div id="js-repo-pjax-container" data-pjax-container>
      
<div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav">
  <div class="container repohead-details-container">

    

<ul class="pagehead-actions">

  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="tUXYucjmEdvCaeh+8MEzhgrc5FfUcIqc7onVv+927AHOCre8YMSFCuN2zb1O0i2G9wdpwUZ7hAnrWBe6TKOcxg==" /></div>      <input class="form-control" id="repository_id" name="repository_id" type="hidden" value="51974774" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/HelikarLab/ccNetViz/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target" role="button" tabindex="0" aria-haspopup="true"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
              <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Unwatch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/HelikarLab/ccNetViz/watchers"
            aria-label="4 users are watching this repository">
            4
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_included" name="do" type="radio" value="included" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-eye" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
                  <div class="select-menu-item-text">
                    <input id="do_ignore" name="do" type="radio" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg aria-hidden="true" class="octicon octicon-mute" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                      Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container on">

    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/HelikarLab/ccNetViz/unstar" class="starred" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="WDOiYS2cPgrb1Dp8HKRbDb6m6xRSHrGycSV0u73PdGkjfM1khb6q2/rLH7+it0UNQ31mgsAVvyd09La+HhoErg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar HelikarLab/ccNetViz"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/HelikarLab/ccNetViz/stargazers"
           aria-label="5 users starred this repository">
          5
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/HelikarLab/ccNetViz/star" class="unstarred" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="3bCs1s+vDHeaI0DWMVwEYoYZ4KTl1zSp4UOYkFB95kGm/8PTZ42Yprs8ZRWPTxpie8JtMnfcOjzkklqV86iWhg==" /></div>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star HelikarLab/ccNetViz"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg aria-hidden="true" class="octicon octicon-star" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/HelikarLab/ccNetViz/stargazers"
           aria-label="5 users starred this repository">
          5
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/HelikarLab/ccNetViz/fork" class="btn-with-count" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="b+53u9MWQnD0WcaXuCI/knlKH4oNFQyE2o/mxwaoWmYUoRi+ezTWodVG41QGMSGShJGSHJ8eAhHfXiTCpX0qoQ==" /></div>
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of HelikarLab/ccNetViz to your account"
                aria-label="Fork your own copy of HelikarLab/ccNetViz to your account">
              <svg aria-hidden="true" class="octicon octicon-repo-forked" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/HelikarLab/ccNetViz/network" class="social-count"
       aria-label="1 user forked this repository">
      1
    </a>
  </li>
</ul>

    <h1 class="public ">
  <svg aria-hidden="true" class="octicon octicon-repo" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a href="/HelikarLab" class="url fn" rel="author">HelikarLab</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a href="/HelikarLab/ccNetViz" data-pjax="#js-repo-pjax-container">ccNetViz</a></strong>

</h1>

  </div>
  <div class="container">
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/HelikarLab/ccNetViz" aria-selected="true" class="js-selected-navigation-item selected reponav-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /HelikarLab/ccNetViz" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-code" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a href="/HelikarLab/ccNetViz/issues" class="js-selected-navigation-item reponav-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /HelikarLab/ccNetViz/issues" itemprop="url">
        <svg aria-hidden="true" class="octicon octicon-issue-opened" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="counter">0</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a href="/HelikarLab/ccNetViz/pulls" class="js-selected-navigation-item reponav-item" data-hotkey="g p" data-selected-links="repo_pulls /HelikarLab/ccNetViz/pulls" itemprop="url">
      <svg aria-hidden="true" class="octicon octicon-git-pull-request" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

  <a href="/HelikarLab/ccNetViz/projects" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /HelikarLab/ccNetViz/projects">
    <svg aria-hidden="true" class="octicon octicon-project" height="16" version="1.1" viewBox="0 0 15 16" width="15"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
    Projects
    <span class="counter">0</span>
</a>
    <a href="/HelikarLab/ccNetViz/wiki" class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /HelikarLab/ccNetViz/wiki">
      <svg aria-hidden="true" class="octicon octicon-book" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a href="/HelikarLab/ccNetViz/pulse" class="js-selected-navigation-item reponav-item" data-selected-links="pulse /HelikarLab/ccNetViz/pulse">
    <svg aria-hidden="true" class="octicon octicon-pulse" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M11.5 8L8.8 5.4 6.6 8.5 5.5 1.6 2.38 8H0v2h3.6l.9-1.8.9 5.4L9 8.5l1.6 1.5H14V8z"/></svg>
    Pulse
</a>
  <a href="/HelikarLab/ccNetViz/graphs" class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors /HelikarLab/ccNetViz/graphs">
    <svg aria-hidden="true" class="octicon octicon-graph" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Graphs
</a>
    <a href="/HelikarLab/ccNetViz/settings" class="js-selected-navigation-item reponav-item" data-selected-links="repo_settings repo_branch_settings hooks integration_installations /HelikarLab/ccNetViz/settings">
      <svg aria-hidden="true" class="octicon octicon-gear" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"/></svg>
      Settings
</a>
</nav>

  </div>
</div>

<div class="container new-discussion-timeline experiment-repo-nav">
  <div class="repository-content">

    

<a href="/HelikarLab/ccNetViz/blob/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js" class="d-none js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:5e9baa7c560ad55fc25c51146edfa2d1 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class="btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <i>Tree:</i>
    <span class="js-select-button css-truncate-target">779597e4ce</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg aria-label="Close" class="octicon octicon-x js-menu-close" height="16" role="img" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Find or create a branchâ¦" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Find or create a branchâ¦">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Find or create a branchâ¦" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/HelikarLab/ccNetViz/blob/gh-pages/dist/ccNetViz.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/HelikarLab/ccNetViz/blob/master/dist/ccNetViz.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg aria-hidden="true" class="octicon octicon-check select-menu-item-icon" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="/HelikarLab/ccNetViz/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-new-item-form" data-form-nonce="8b1493934c9120103827afc779fa54afbdea4966" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="83DGjpzC5brMJh5/o9U8KBI/spDLknw6baHshb8jDIqIP6mLNOBxa+05O7wdxiIo7+Q/BlmZcq9ocC6AHPZ8TQ==" /></div>
          <svg aria-hidden="true" class="octicon octicon-git-branch select-menu-item-icon" height="16" version="1.1" viewBox="0 0 10 16" width="10"><path fill-rule="evenodd" d="M10 5c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v.3c-.02.52-.23.98-.63 1.38-.4.4-.86.61-1.38.63-.83.02-1.48.16-2 .45V4.72a1.993 1.993 0 0 0-1-3.72C.88 1 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2 1.11 0 2-.89 2-2 0-.53-.2-1-.53-1.36.09-.06.48-.41.59-.47.25-.11.56-.17.94-.17 1.05-.05 1.95-.45 2.75-1.25S8.95 7.77 9 6.73h-.02C9.59 6.37 10 5.73 10 5zM2 1.8c.66 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2C1.35 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2zm0 12.41c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm6-8c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
            <div class="select-menu-item-text">
              <span class="select-menu-item-heading">Create branch: <span class="js-new-item-name"></span></span>
              <span class="description">from â779597eâ</span>
            </div>
            <input type="hidden" name="name" id="name" class="js-new-item-value">
            <input type="hidden" name="branch" id="branch" value="779597e4ce67ebba0d9e4ca46e0ed55fbf70447f">
            <input type="hidden" name="path" id="path" value="dist/ccNetViz.min.js">
</form>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="BtnGroup float-right">
    <a href="/HelikarLab/ccNetViz/find/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f"
          class="js-pjax-capture-input btn btn-sm BtnGroup-item"
          data-pjax
          data-hotkey="t">
      Find file
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard btn btn-sm BtnGroup-item tooltipped tooltipped-s" data-copied-hint="Copied!" type="button">Copy path</button>
  </div>
  <div class="breadcrumb js-zeroclipboard-target">
    <span class="repo-root js-repo-root"><span class="js-path-segment"><a href="/HelikarLab/ccNetViz/tree/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f"><span>ccNetViz</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a href="/HelikarLab/ccNetViz/tree/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">ccNetViz.min.js</strong>
  </div>
</div>

<include-fragment class="commit-tease" src="/HelikarLab/ccNetViz/contributors/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js">
  <div>
    Fetching contributors&hellip;
  </div>

  <div class="commit-tease-contributors">
    <img alt="" class="loader-loading float-left" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" />
    <span class="loader-error">Cannot retrieve contributors at this time</span>
  </div>
</include-fragment>

<div class="file">
  <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a href="/HelikarLab/ccNetViz/raw/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js" class="btn btn-sm BtnGroup-item" id="raw-url">Raw</a>
        <a href="/HelikarLab/ccNetViz/blame/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js" class="btn btn-sm js-update-url-with-hash BtnGroup-item">Blame</a>
      <a href="/HelikarLab/ccNetViz/commits/779597e4ce67ebba0d9e4ca46e0ed55fbf70447f/dist/ccNetViz.min.js" class="btn btn-sm BtnGroup-item" rel="nofollow">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           aria-label="You must be on a branch to open this file in GitHub Desktop">
            <svg aria-hidden="true" class="octicon octicon-device-desktop" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

        <button type="button" class="btn-octicon disabled tooltipped tooltipped-nw"
          aria-label="You must be on a branch to make or propose changes to this file">
          <svg aria-hidden="true" class="octicon octicon-pencil" height="16" version="1.1" viewBox="0 0 14 16" width="14"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
        </button>
        <button type="button" class="btn-octicon btn-octicon-danger disabled tooltipped tooltipped-nw"
          aria-label="You must be on a branch to make or propose changes to this file">
          <svg aria-hidden="true" class="octicon octicon-trashcan" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
        </button>
  </div>

  <div class="file-info">
      117 lines (116 sloc)
      <span class="file-info-divider"></span>
    58.7 KB
  </div>
</div>

  

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> da<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">Object</span>.<span class="pl-smi">defineProperties</span><span class="pl-k">?</span><span class="pl-c1">Object</span>.<span class="pl-smi">defineProperty</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">if</span>(<span class="pl-smi">h</span>.<span class="pl-smi">get</span><span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-smi">set</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ES3 does not support getters and setters.<span class="pl-pds">&quot;</span></span>);w<span class="pl-k">!=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span><span class="pl-k">&amp;&amp;</span>w<span class="pl-k">!=</span><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span><span class="pl-k">&amp;&amp;</span>(w[v]<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">value</span>)},ea<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">window</span><span class="pl-k">===</span><span class="pl-v">this</span><span class="pl-k">?</span><span class="pl-v">this</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> <span class="pl-c1">global</span><span class="pl-k">?</span><span class="pl-c1">global</span><span class="pl-k">:</span><span class="pl-v">this</span>;</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">fa</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>){<span class="pl-k">if</span>(v){<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span>ea,g<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;a<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>g[a];e <span class="pl-k">in</span> h<span class="pl-k">||</span>(h[e]<span class="pl-k">=</span>{});h<span class="pl-k">=</span>h[e]}g<span class="pl-k">=</span>g[<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>];a<span class="pl-k">=</span>h[g];e<span class="pl-k">=</span><span class="pl-en">v</span>(a);e<span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-en">da</span>(h,g,{configurable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,writable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>e})}}<span class="pl-en">fa</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Array.prototype.find<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">return</span> w<span class="pl-k">?</span>w<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> g;a<span class="pl-k">:</span>{g<span class="pl-k">=</span><span class="pl-v">this</span>;g <span class="pl-k">instanceof</span> <span class="pl-c1">String</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">String</span>(g));<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>a;e<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>g[e];<span class="pl-k">if</span>(<span class="pl-smi">v</span>.<span class="pl-c1">call</span>(h,c,e,g)){g<span class="pl-k">=</span>c;<span class="pl-k">break</span> a}}g<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>}<span class="pl-k">return</span> g}});<span class="pl-en">fa</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Number.EPSILON<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(<span class="pl-c1">2</span>,<span class="pl-k">-</span><span class="pl-c1">52</span>)});</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">function</span> <span class="pl-en">v</span>(<span class="pl-smi">g</span>){<span class="pl-k">if</span>(h[g])<span class="pl-k">return</span> h[g].<span class="pl-smi">f</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span>h[g]<span class="pl-k">=</span>{f<span class="pl-k">:</span>{},id<span class="pl-k">:</span>g,loaded<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};w[g].<span class="pl-c1">call</span>(<span class="pl-smi">a</span>.<span class="pl-smi">f</span>,a,<span class="pl-smi">a</span>.<span class="pl-smi">f</span>,v);<span class="pl-smi">a</span>.<span class="pl-smi">loaded</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">f</span>}<span class="pl-k">var</span> h<span class="pl-k">=</span>{};<span class="pl-smi">v</span>.<span class="pl-smi">$c</span><span class="pl-k">=</span>w;<span class="pl-smi">v</span>.<span class="pl-smi">Pc</span><span class="pl-k">=</span>h;<span class="pl-smi">v</span>.<span class="pl-smi">p</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-en">v</span>(<span class="pl-c1">0</span>)})([<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>(e,c),k,q<span class="pl-k">=</span>[],r<span class="pl-k">=</span>{},g,m;<span class="pl-smi">e</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contextmenu<span class="pl-pds">&quot;</span></span>,<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">q</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">pop</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-smi">r</span>.<span class="pl-smi">a</span>,<span class="pl-smi">r</span>.<span class="pl-smi">i</span>),<span class="pl-smi">b</span>.<span class="pl-en">F</span>());<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()});<span class="pl-smi">e</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">getBoundingClientRect</span>();a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">mc</span>({La<span class="pl-k">:</span><span class="pl-c1">5</span>,x<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">left</span>,y<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">top</span>});a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">find</span>(<span class="pl-smi">a</span>.<span class="pl-c1">x</span>,<span class="pl-smi">a</span>.<span class="pl-c1">y</span>,<span class="pl-smi">a</span>.<span class="pl-smi">La</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>[<span class="pl-c1">0</span>].<span class="pl-smi">node</span>;a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">rc</span><span class="pl-k">||</span>k;<span class="pl-smi">d</span>.<span class="pl-smi">Wb</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-smi">Wb</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">d</span>.<span class="pl-smi">a</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">a</span>,d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">i</span>,<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(r),r<span class="pl-k">=</span>{a<span class="pl-k">:</span>f,i<span class="pl-k">:</span>d},<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-smi">r</span>.<span class="pl-smi">a</span>,<span class="pl-smi">r</span>.<span class="pl-smi">i</span>,a),<span class="pl-smi">b</span>.<span class="pl-en">F</span>())}});<span class="pl-v">this</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">e</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>contextmenu<span class="pl-pds">&quot;</span></span>,g);<span class="pl-smi">e</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>click<span class="pl-pds">&quot;</span></span>,m);<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>()};<span class="pl-v">this</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>,<span class="pl-smi">c</span>){r<span class="pl-k">=</span>{a<span class="pl-k">:</span>a,i<span class="pl-k">:</span>f};q<span class="pl-k">=</span>[];k<span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-smi">set</span>.<span class="pl-c1">apply</span>(b,<span class="pl-v">arguments</span>)};<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>find findArea getLayerCoords draw resetView setViewport update resetView<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){d[a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> b[a].<span class="pl-c1">apply</span>(b,<span class="pl-v">arguments</span>)}})(a,</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line">h)})}<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">1</span>);<span class="pl-c1">window</span>.<span class="pl-smi">Rc</span><span class="pl-k">=</span>g;<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>g},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">f</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">A</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>()){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">ca</span>[a].<span class="pl-c1">apply</span>(<span class="pl-smi">l</span>.<span class="pl-smi">ca</span>,f);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">l</span>.<span class="pl-smi">w</span>)<span class="pl-k">return</span> b;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">w</span>[a].<span class="pl-c1">apply</span>(<span class="pl-smi">l</span>.<span class="pl-smi">w</span>,f),c<span class="pl-k">=</span>{},p;<span class="pl-k">for</span>(p <span class="pl-k">in</span> b)c[p]<span class="pl-k">=</span><span class="pl-en">e</span>(b[p],d[p],<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">N</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">N</span>});<span class="pl-k">return</span> c}}function x(a){return g(a,Z(),.4)}function g(a,b,f){b=f*Math.sqrt(a.width*a.height/b)/y.size;if(a=a.style)b=a.ka?Math.min(a.ka,b):b,b=b&lt;a.Xc?0:a.da?Math.max(a.da,b):b;return b}function B(){return z?(console.error(&quot;Cannot call any function on graph after remove()&quot;),</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function C(){l.w||(l.w=new c(f,F,y,H,G,S,L,d,p,n,g,x,Z,ca,M,N))}function h(){X||(X=new D(l,C,Y,U,V,a));return X}function v(){var a=!1;if(T)for(var b in y)T[b]!==y[b]&amp;&amp;(a=!0);q.extend(T,y);a&amp;&amp;d.yc&amp;&amp;d.yc(y)}var w=this,R=this,K=d.m.background=d.m.background||{},K=new k(K.color||&quot;rgb(255, 255, 255)&quot;),z=!1,u=!1,p=d.m.node=d.m.node||{};p.da=null!=p.da?p.da:6;p.ka=p.ka||16;p.color=p.color||&quot;rgb(255, 255, 255)&quot;;if(p.label){var t=p.label;t.color=t.color||&quot;rgb(120, 120, 120)&quot;;t.font=t.font||&quot;11px Arial, Helvetica, sans-serif&quot;}var n=</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-smi">m</span>.<span class="pl-smi">$a</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">m</span>.<span class="pl-smi">$a</span><span class="pl-k">||</span>{};<span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">width</span><span class="pl-k">||</span><span class="pl-c1">1</span>;<span class="pl-smi">n</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">color</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>rgb(204, 204, 204)<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">fb</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">!</span>z<span class="pl-k">&amp;&amp;</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">w</span>.<span class="pl-en">F</span>()};<span class="pl-smi">n</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">ba</span>,<span class="pl-smi">t</span>.<span class="pl-smi">da</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">t</span>.<span class="pl-smi">da</span><span class="pl-k">?</span><span class="pl-smi">t</span>.<span class="pl-smi">da</span><span class="pl-k">:</span><span class="pl-c1">6</span>,<span class="pl-smi">t</span>.<span class="pl-smi">ka</span><span class="pl-k">=</span><span class="pl-smi">t</span>.<span class="pl-smi">ka</span><span class="pl-k">||</span><span class="pl-c1">12</span>,<span class="pl-smi">t</span>.<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">m</span>,l<span class="pl-k">=</span>{},y<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">F</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-en">Ua</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b;<span class="pl-k">for</span>(b <span class="pl-k">in</span> l)a<span class="pl-k">+=</span>l[b].<span class="pl-en">Ua</span>();<span class="pl-k">return</span> a};<span class="pl-k">var</span> <span class="pl-c1">Z</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">Vc</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">Ua</span>;<span class="pl-v">this</span>.<span class="pl-en">Ta</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,b;<span class="pl-k">for</span>(b <span class="pl-k">in</span> l)a<span class="pl-k">+=</span>l[b].<span class="pl-en">Ta</span>();<span class="pl-k">return</span> a};<span class="pl-k">var</span> ca<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">Uc</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-smi">Ta</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-en">Bb</span>(<span class="pl-k">function</span>(){<span class="pl-c1">R</span>.<span class="pl-c1">F</span>.<span class="pl-c1">call</span>(<span class="pl-c1">R</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-c1">5</span>),<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">f</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-en">B</span>())<span class="pl-k">return</span> w;<span class="pl-c1">U</span><span class="pl-k">=</span>b<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">[];<span class="pl-c1">V</span><span class="pl-k">=</span>f<span class="pl-k">||</span>[];<span class="pl-c1">U</span>.<span class="pl-c1">forEach</span>(a);<span class="pl-c1">V</span>.<span class="pl-c1">forEach</span>(a);<span class="pl-smi">l</span>.<span class="pl-smi">w</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">w</span>.<span class="pl-c1">set</span>([],[],d);<span class="pl-smi">l</span>.<span class="pl-smi">ca</span>.<span class="pl-c1">set</span>(<span class="pl-c1">U</span>,<span class="pl-c1">V</span>,d);<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;u<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> w};<span class="pl-v">this</span>.<span class="pl-en">removeNode</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">B</span>())<span class="pl-k">return</span> w;<span class="pl-en">h</span>().<span class="pl-en">removeNode</span>(a);<span class="pl-k">return</span> w};<span class="pl-v">this</span>.<span class="pl-en">Rb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">B</span>()<span class="pl-k">||</span><span class="pl-en">h</span>().<span class="pl-en">Rb</span>(a)};<span class="pl-v">this</span>.<span class="pl-en">ub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">B</span>()<span class="pl-k">||</span><span class="pl-en">h</span>().<span class="pl-en">ub</span>(a)};<span class="pl-v">this</span>.<span class="pl-en">vb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">B</span>()<span class="pl-k">||</span><span class="pl-en">h</span>().<span class="pl-en">vb</span>(a)};<span class="pl-v">this</span>.<span class="pl-en">Vb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">B</span>())<span class="pl-k">return</span> w;<span class="pl-smi">w</span>.<span class="pl-en">removeNode</span>(a);<span class="pl-smi">w</span>.<span class="pl-en">vb</span>(a);<span class="pl-k">return</span> w};<span class="pl-v">this</span>.<span class="pl-en">Ub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-en">B</span>())<span class="pl-k">return</span> w;<span class="pl-smi">w</span>.<span class="pl-en">Rb</span>(a);<span class="pl-smi">w</span>.<span class="pl-en">ub</span>(a);<span class="pl-k">return</span> w};<span class="pl-v">this</span>.<span class="pl-en">jc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">B</span>()<span class="pl-k">||</span><span class="pl-en">h</span>().<span class="pl-en">jc</span>()};<span class="pl-k">var</span> aa<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">p</span>.<span class="pl-smi">ka</span>;<span class="pl-v">this</span>.<span class="pl-en">F</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>()){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span>,</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>,c<span class="pl-k">=</span>a<span class="pl-k">/</span>d,n<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">?</span>aa<span class="pl-k">:</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span>n<span class="pl-k">/</span>a,n<span class="pl-k">=</span>n<span class="pl-k">/</span>d;<span class="pl-c1">F</span>.<span class="pl-smi">transform</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">bd</span>(<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>u,<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">+</span>u,<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>n,<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">+</span>n,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">1</span>);<span class="pl-c1">F</span>.<span class="pl-smi">offsetX</span><span class="pl-k">=</span>u;<span class="pl-c1">F</span>.<span class="pl-smi">offsetY</span><span class="pl-k">=</span>n;<span class="pl-c1">F</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>a;<span class="pl-c1">F</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>d;<span class="pl-c1">F</span>.<span class="pl-c1">D</span><span class="pl-k">=</span>c<span class="pl-k">*</span>c;<span class="pl-c1">F</span>.<span class="pl-c1">S</span><span class="pl-k">=</span>c;<span class="pl-c1">F</span>.<span class="pl-smi">count</span><span class="pl-k">=</span><span class="pl-en">Z</span>();<span class="pl-c1">F</span>.<span class="pl-c1">style</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> <span class="pl-c1">F</span>.<span class="pl-c1">style</span>;<span class="pl-c1">F</span>.<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-en">g</span>(<span class="pl-c1">F</span>,<span class="pl-en">ca</span>(),<span class="pl-c1">.5</span>);<span class="pl-c1">F</span>.<span class="pl-c1">style</span><span class="pl-k">=</span>p;<span class="pl-c1">F</span>.<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-en">x</span>(<span class="pl-c1">F</span>);<span class="pl-c1">H</span>.<span class="pl-en">viewport</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,a,d);<span class="pl-c1">H</span>.<span class="pl-c1">clear</span>(<span class="pl-c1">H</span>.<span class="pl-c1">COLOR_BUFFER_BIT</span>);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-smi">ca</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">elements</span>.<span class="pl-c1">length</span>;a<span class="pl-k">++</span>)<span class="pl-smi">l</span>.<span class="pl-smi">ca</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">elements</span>[a].<span class="pl-en">F</span>(<span class="pl-c1">F</span>),<span class="pl-smi">l</span>.<span class="pl-smi">w</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">w</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">elements</span>[a].<span class="pl-en">F</span>(<span class="pl-c1">F</span>)}};<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">F</span>.<span class="pl-en">bind</span>(<span class="pl-v">this</span>);<span class="pl-v">this</span>.<span class="pl-en">mc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>()){<span class="pl-k">var</span> b<span class="pl-k">=</span>{};[<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>x2<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[d]){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line">a[d],c<span class="pl-k">=</span>c<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">*</span>(<span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">F</span>.<span class="pl-smi">offsetX</span>)<span class="pl-k">-</span><span class="pl-c1">F</span>.<span class="pl-smi">offsetX</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-c1">x</span>;b[d]<span class="pl-k">=</span>c}});[<span class="pl-s"><span class="pl-pds">&quot;</span>y<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>y2<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a[d]){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[d],c<span class="pl-k">=</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>)<span class="pl-k">*</span>(<span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">F</span>.<span class="pl-smi">offsetY</span>)<span class="pl-k">-</span><span class="pl-c1">F</span>.<span class="pl-smi">offsetY</span><span class="pl-k">+</span><span class="pl-smi">y</span>.<span class="pl-c1">y</span>;b[d]<span class="pl-k">=</span>c}});<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">La</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">La</span>,d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>,d<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span>)<span class="pl-k">*</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>;<span class="pl-smi">b</span>.<span class="pl-smi">La</span><span class="pl-k">=</span>d}<span class="pl-k">return</span> b}};<span class="pl-v">this</span>.<span class="pl-en">find</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>find<span class="pl-pds">&quot;</span></span>,<span class="pl-v">arguments</span>)};<span class="pl-v">this</span>.<span class="pl-en">Cb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>findArea<span class="pl-pds">&quot;</span></span>,<span class="pl-v">arguments</span>)};<span class="pl-k">var</span> ba<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-smi">f</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,<span class="pl-en">ba</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(q)z<span class="pl-k">?</span><span class="pl-smi">l</span>.<span class="pl-smi">Za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">Za</span>(a)<span class="pl-k">:</span>(<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">y</span>.<span class="pl-c1">size</span>,k<span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">/</span>p)),<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>,<span class="pl-smi">a</span>.<span class="pl-smi">clientY</span><span class="pl-k">/</span>n<span class="pl-k">-</span>e)),<span class="pl-en">v</span>(),<span class="pl-smi">c</span>.<span class="pl-en">F</span>());<span class="pl-k">else</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span>u,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span><span class="pl-k">-</span>t;<span class="pl-c1">8</span><span class="pl-k">&lt;</span>b<span class="pl-k">*</span>b<span class="pl-k">+</span>d<span class="pl-k">*</span>d<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,(z<span class="pl-k">=</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">start</span>({clientX<span class="pl-k">:</span>u,clientY<span class="pl-k">:</span>t}))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">Za</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-en">Za</span>(a))}<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>()}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>,p<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>,n<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>,u<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientX</span>,t<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">clientY</span>,k<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">+</span>u<span class="pl-k">/</span>p,e<span class="pl-k">=</span>t<span class="pl-k">/</span>n<span class="pl-k">-</span><span class="pl-smi">y</span>.<span class="pl-c1">y</span>,l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ad</span>,q<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,z<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">ha</span>(<span class="pl-smi">a</span>){z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">stop</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-c1">stop</span>(a);<span class="pl-k">!</span>q<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">zc</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">zc</span>(a);<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mouseup<span class="pl-pds">&quot;</span></span>,ha);<span class="pl-c1">window</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,b)});<span class="pl-c1">window</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousemove<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">b)}.<span class="pl-en">bind</span>(<span class="pl-v">this</span>));<span class="pl-smi">f</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wheel<span class="pl-pds">&quot;</span></span>,<span class="pl-en">W</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">getBoundingClientRect</span>(),c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span>,<span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">.001</span><span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">deltaMode</span><span class="pl-k">?</span><span class="pl-c1">33</span><span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">deltaY</span>)),p<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>;<span class="pl-smi">a</span>.<span class="pl-c1">preventDefault</span>();<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-c1">size</span>,u<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-c1">x</span>,t<span class="pl-k">=</span><span class="pl-smi">y</span>.<span class="pl-c1">y</span>;<span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">=</span>c;<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c,<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>p<span class="pl-k">*</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clientX</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">left</span>)<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">width</span>));<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>c,<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>p<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>(<span class="pl-smi">a</span>.<span class="pl-smi">clientY</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">top</span>)<span class="pl-k">/</span><span class="pl-smi">f</span>.<span class="pl-c1">height</span>)));<span class="pl-smi">d</span>.<span class="pl-smi">Ac</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">1</span><span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-en">Ac</span>(y)<span class="pl-k">?</span>(<span class="pl-smi">y</span>.<span class="pl-c1">size</span><span class="pl-k">=</span>n,<span class="pl-smi">y</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>u,<span class="pl-smi">y</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>t)<span class="pl-k">:</span>(<span class="pl-en">v</span>(),<span class="pl-v">this</span>.<span class="pl-en">F</span>())}.<span class="pl-en">bind</span>(<span class="pl-v">this</span>));<span class="pl-v">this</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>()){<span class="pl-c1">H</span>.<span class="pl-en">viewport</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">F</span>.<span class="pl-c1">width</span>,<span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">F</span>.<span class="pl-c1">height</span>);<span class="pl-c1">H</span>.<span class="pl-c1">clear</span>(<span class="pl-c1">H</span>.<span class="pl-c1">COLOR_BUFFER_BIT</span>);</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">H</span>.<span class="pl-en">getExtension</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>WEBGL_lose_context<span class="pl-pds">&quot;</span></span>);a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">loseContext</span>();<span class="pl-smi">f</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>mousedown<span class="pl-pds">&quot;</span></span>,ba);<span class="pl-smi">f</span>.<span class="pl-c1">removeEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wheel<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">W</span>);<span class="pl-c1">L</span>.<span class="pl-en">disable</span>();z<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}};<span class="pl-k">var</span> <span class="pl-c1">T</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-en">Gb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>())<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">toDataURL</span>()};<span class="pl-v">this</span>.<span class="pl-en">resize</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">B</span>()<span class="pl-k">||</span>(<span class="pl-smi">f</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">offsetWidth</span>,<span class="pl-smi">f</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">offsetHeight</span>)};[<span class="pl-s"><span class="pl-pds">&quot;</span>update<span class="pl-pds">&quot;</span></span>].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b[a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">arguments</span>,f;<span class="pl-k">for</span>(f <span class="pl-k">in</span> l){<span class="pl-k">var</span> c<span class="pl-k">=</span>l[f];c[a].<span class="pl-c1">apply</span>(c,d)}<span class="pl-k">return</span> b}})(a,<span class="pl-c1">R</span>)});<span class="pl-en">H</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{depth<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,antialias<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>webgl<span class="pl-pds">&quot;</span></span>,a)<span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>experimental-webgl<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">a)}();<span class="pl-c1">H</span>.<span class="pl-en">clearColor</span>(<span class="pl-c1">K</span>.<span class="pl-smi">r</span>,<span class="pl-c1">K</span>.<span class="pl-c1">W</span>,<span class="pl-c1">K</span>.<span class="pl-c1">T</span>,<span class="pl-c1">K</span>.<span class="pl-smi">ra</span>);<span class="pl-c1">H</span>.<span class="pl-en">blendEquation</span>(<span class="pl-c1">H</span>.<span class="pl-c1">FUNC_ADD</span>);<span class="pl-c1">H</span>.<span class="pl-en">blendFuncSeparate</span>(<span class="pl-c1">H</span>.<span class="pl-c1">SRC_ALPHA</span>,<span class="pl-c1">H</span>.<span class="pl-c1">ONE_MINUS_SRC_ALPHA</span>,<span class="pl-c1">H</span>.<span class="pl-c1">ONE</span>,<span class="pl-c1">H</span>.<span class="pl-c1">ONE</span>);<span class="pl-c1">H</span>.<span class="pl-en">enable</span>(<span class="pl-c1">H</span>.<span class="pl-c1">BLEND</span>);y<span class="pl-k">=</span>{size<span class="pl-k">:</span><span class="pl-c1">1</span>,x<span class="pl-k">:</span><span class="pl-c1">0</span>,y<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-v">this</span>.<span class="pl-c1">resize</span>();<span class="pl-k">var</span> <span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">r</span>(<span class="pl-c1">L</span>,<span class="pl-c1">N</span>),<span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">J</span>(<span class="pl-c1">L</span>,<span class="pl-c1">N</span>);<span class="pl-smi">l</span>.<span class="pl-smi">ca</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">c</span>(f,<span class="pl-c1">F</span>,y,<span class="pl-c1">H</span>,<span class="pl-c1">G</span>,<span class="pl-c1">S</span>,<span class="pl-c1">L</span>,d,p,n,g,x,<span class="pl-c1">Z</span>,ca,<span class="pl-c1">M</span>,<span class="pl-c1">N</span>)}function a(a){void 0!==a.Aa?(a.b=a.Aa,delete a.Aa):void 0===a.b&amp;&amp;(a.b=++d)}function e(a,b,d){var f=[];f.length=a.length+b.length;for(var c=0,k=0,e=0;c&lt;a.length&amp;&amp;k&lt;b.length;)0&gt;d(a[c],b[k])?f[e++]=a[c++]:f[e++]=b[k++];for(;c&lt;a.length;)f[e++]=a[c++];</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(;k<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;)f[e<span class="pl-k">++</span>]<span class="pl-k">=</span>b[k<span class="pl-k">++</span>];<span class="pl-k">return</span> f}<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">2</span>);v<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">8</span>);<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>),k<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">3</span>),q<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">7</span>),r<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">18</span>),<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">19</span>),m<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">20</span>),<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">21</span>);h<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">16</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">g</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>k;<span class="pl-smi">g</span>.<span class="pl-smi">fd</span><span class="pl-k">=</span>h;<span class="pl-smi">g</span>.<span class="pl-smi">rc</span><span class="pl-k">=</span>v;<span class="pl-smi">g</span>.<span class="pl-c1">color</span><span class="pl-k">=</span>k;<span class="pl-c1">window</span>.<span class="pl-smi">Qc</span><span class="pl-k">=</span>g;<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>g},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-en">h</span>(<span class="pl-c1">3</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">5</span>),e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">8</span>),c<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">12</span>),b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">13</span>);<span class="pl-en">h</span>(<span class="pl-c1">7</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">16</span>);<span class="pl-smi">w</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">q</span>,<span class="pl-smi">r</span>,<span class="pl-smi">h</span>,<span class="pl-smi">m</span>,<span class="pl-c1">D</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">x</span>,<span class="pl-c1">A</span>,<span class="pl-c1">E</span>,<span class="pl-c1">I</span>,<span class="pl-c1">B</span>,<span class="pl-c1">C</span>,<span class="pl-c1">O</span>,<span class="pl-smi">v</span>,<span class="pl-smi">w</span>){<span class="pl-k">function</span> <span class="pl-en">J</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>ba[a]);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> a)a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> a}function K(b,d,f,p,n,u){var t=d.x,k=d.y,l,e,q,z;c.bb(d.e,H);l=H.x;e=H.y;q=H.U;z=H.V;d=d.Jb?0:1;b.Xa&amp;&amp;a.g(b.Xa,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">f,<span class="pl-k">-</span>e,l,<span class="pl-k">-</span>e,l,<span class="pl-k">-</span>e,l,<span class="pl-k">-</span>e,l);<span class="pl-smi">b</span>.<span class="pl-smi">Sa</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Sa</span>,f,<span class="pl-k">-</span>z,q,<span class="pl-k">-</span>z,q,<span class="pl-k">-</span>z,q,<span class="pl-k">-</span>z,q);<span class="pl-smi">a</span>.<span class="pl-en">ed</span>(<span class="pl-smi">b</span>.<span class="pl-smi">xc</span>,f,d,d,d,d);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,f,t,k,t,k,t,k,t,k);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">direction</span>,f,n,u,n,u,n,u,n,u);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Tb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,f,p)}function z(b,d,f,p){var n,u,t,k,e,q;c.bb(p.e,l);p=l.x;u=l.y;e=l.U;q=l.V;c.bb(f.e,y);f=y.x;n=y.y;t=y.U;k=y.V;b.Xa&amp;&amp;a.g(b.Xa,d,-n,f,-n,f,-u,p,-u,p);b.Sa&amp;&amp;a.g(b.Sa,d,-k,t,-k,t,-q,e,-q,e)}function u(a,b){var d=b.x-a.x,f=b.y-a.y,c=1/Math.sqrt(d*d+f*f);return{x:c*d,y:c*f}}function p(b){return function(b){var f=T.Db(b.font);</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">Ec</span>(<span class="pl-smi">b</span>.<span class="pl-smi">font</span>,d,<span class="pl-c1">D</span>);<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">p</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>,u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>,t<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">get</span>(<span class="pl-smi">d</span>.<span class="pl-c1">label</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,n,u),k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-smi">t</span>.<span class="pl-c1">length</span>;k<span class="pl-k">++</span>,c<span class="pl-k">+=</span><span class="pl-c1">4</span>,p<span class="pl-k">+=</span><span class="pl-c1">6</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>t[k],l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">xb</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">color</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span>;<span class="pl-smi">a</span>.<span class="pl-en">zb</span>(<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,c,q,q,q,q)}<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,c,n,u,n,u,n,u,n,u);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">cd</span>,c,<span class="pl-smi">e</span>.<span class="pl-smi">sa</span>,<span class="pl-smi">e</span>.<span class="pl-smi">ta</span>,<span class="pl-smi">l</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">sa</span>,<span class="pl-smi">e</span>.<span class="pl-smi">ta</span>,<span class="pl-smi">l</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">sa</span>,<span class="pl-smi">l</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">ta</span>,<span class="pl-smi">e</span>.<span class="pl-smi">sa</span>,<span class="pl-smi">l</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-smi">ta</span>);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Tb</span>,c,<span class="pl-smi">l</span>.<span class="pl-c1">left</span>,<span class="pl-smi">l</span>.<span class="pl-c1">bottom</span>,<span class="pl-smi">l</span>.<span class="pl-c1">right</span>,<span class="pl-smi">l</span>.<span class="pl-c1">bottom</span>,<span class="pl-smi">l</span>.<span class="pl-c1">right</span>,<span class="pl-smi">l</span>.<span class="pl-c1">top</span>,<span class="pl-smi">l</span>.<span class="pl-c1">left</span>,<span class="pl-smi">l</span>.<span class="pl-c1">top</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,c,p)}},<span class="pl-en">size</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-en">gd</span>(<span class="pl-smi">b</span>.<span class="pl-c1">label</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}}}(b)}function t(){return{set:function(b,d,f,c){var p=d.x,n=</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">y</span>;<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,f,p,n,p,n,p,n,p,n);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Tb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-en">zb</span>(<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,f,d,d,d,d));<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,f,c)}}}<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">||</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-smi">i</span>.<span class="pl-c1">length</span>};x<span class="pl-k">=</span>x<span class="pl-k">||</span>{};<span class="pl-smi">x</span>.<span class="pl-smi">m</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">m</span><span class="pl-k">||</span>{};<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(<span class="pl-c1">.9</span>),<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sin</span>(<span class="pl-c1">.9</span>),l<span class="pl-k">=</span>{},y<span class="pl-k">=</span>{},<span class="pl-c1">H</span><span class="pl-k">=</span>{},<span class="pl-c1">Y</span><span class="pl-k">=</span>{<span class="pl-en">lines</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">p</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">u</span>(d);d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">B</span>(d);<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>,k<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>,l<span class="pl-k">=</span><span class="pl-en">u</span>(n,d);<span class="pl-en">z</span>(b,f,n,d);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,f,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Kb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,t,k,t,k);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Qb</span>,f,<span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">x</span>,<span class="pl-k">-</span><span class="pl-smi">l</span>.<span class="pl-c1">y</span>,<span class="pl-smi">l</span>.<span class="pl-c1">x</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,f,p)}}},<span class="pl-en">curves</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{s<span class="pl-k">:</span><span class="pl-c1">3</span>,</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">G</span><span class="pl-k">:</span><span class="pl-c1">3</span>,<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">p</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">u</span>(d);d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">B</span>(d);<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">x</span>,l<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span>,k<span class="pl-k">=</span><span class="pl-en">u</span>(n,d);<span class="pl-en">z</span>(b,f,n,d);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,f,<span class="pl-smi">n</span>.<span class="pl-c1">x</span>,<span class="pl-smi">n</span>.<span class="pl-c1">y</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">d</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">x</span>),<span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">n</span>.<span class="pl-c1">y</span>),<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Kb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,t<span class="pl-k">/</span><span class="pl-c1">2</span>,l<span class="pl-k">/</span><span class="pl-c1">2</span>,t,l);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Qb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-k">-</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">curve</span>,f,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">l</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,f,p,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>)}}},<span class="pl-en">circles</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">n</span>){d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">u</span>(d);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span><span class="pl-smi">d</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span><span class="pl-c1">1.25</span><span class="pl-k">*</span>p,t<span class="pl-k">=</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>p;<span class="pl-en">z</span>(b,f,d,d);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">position</span>,f,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>,<span class="pl-smi">d</span>.<span class="pl-c1">x</span>,<span class="pl-smi">d</span>.<span class="pl-c1">y</span>);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Kb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,p,<span class="pl-c1">2</span>,u,<span class="pl-c1">3</span>,t);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Qb</span>,f,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,p,<span class="pl-c1">0</span>,<span class="pl-c1">1.25</span><span class="pl-k">*</span>p,<span class="pl-k">-</span><span class="pl-c1">1</span>,p);<span class="pl-smi">a</span>.<span class="pl-en">g</span>(<span class="pl-smi">b</span>.<span class="pl-smi">curve</span>,f,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">.5</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">.5</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-en">Ka</span>(<span class="pl-smi">b</span>.<span class="pl-smi">l</span>,f,n)}}}},<span class="pl-c1">F</span><span class="pl-k">=</span>{<span class="pl-en">Lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">u</span>(b);b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">B</span>(b);p<span class="pl-k">=</span><span class="pl-en">u</span>(p,b);<span class="pl-en">K</span>(a,b,d,f,<span class="pl-smi">p</span>.<span class="pl-c1">x</span>,<span class="pl-smi">p</span>.<span class="pl-c1">y</span>)}}},<span class="pl-en">Ab</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">u</span>(b);b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">B</span>(b);<span class="pl-k">return</span> <span class="pl-en">K</span>(a,b,d,f,<span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span>),<span class="pl-c1">.5</span><span class="pl-k">*</span>(<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">p</span>.<span class="pl-c1">y</span>))}}},<span class="pl-en">yb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">B</span>(b);<span class="pl-k">return</span> <span class="pl-en">K</span>(a,b,d,f,<span class="pl-c1">.5</span><span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-c1">N</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">N</span>,<span class="pl-c1">.5</span><span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">L</span><span class="pl-k">:</span><span class="pl-c1">L</span>)}}}};<span class="pl-v">this</span>.<span class="pl-en">ab</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">M</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">k</span>(a,[],[],[],[],u));<span class="pl-k">return</span> <span class="pl-c1">M</span>};<span class="pl-k">var</span> <span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">f</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">label</span><span class="pl-k">||</span>{}).<span class="pl-smi">font</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">{},c<span class="pl-k">=</span><span class="pl-c1">T</span>.<span class="pl-en">Db</span>(f);<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-smi">o</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">nc</span>(f,d,<span class="pl-c1">D</span>,b)}function n(a,b){&quot;string&quot;===typeof a.style.o?a.style.o=D.get(m,a.style.o,b):b()}function l(a){return a.b||-a.index||-a.vc}var q=this;V=U=0;this.a=a=a||[];this.i=b=b?[].concat(b):[];M=void 0;for(var z=[],r=[],y=[],g=0;g&lt;b.length;g++){var L=b[g];&quot;number&quot;==typeof L.source&amp;&amp;(L.source=a[L.source]);&quot;number&quot;==typeof L.target&amp;&amp;(L.target=a[L.target])}this.ab=function(b){void 0===M&amp;&amp;(M=new k(b,a,z,r,y,u));return M};(function(){for(var d=0;d&lt;a.length;d++)a[d].index=d;for(var d=</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">10</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>,f<span class="pl-k">++</span>)b[d].<span class="pl-smi">vc</span><span class="pl-k">=</span>f;<span class="pl-c1">P</span><span class="pl-k">=</span>[];<span class="pl-c1">Q</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span>{k<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>,xa<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">:</span>[]},f<span class="pl-k">=</span>{k<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>circles<span class="pl-pds">&quot;</span></span>,xa<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>circleArrows<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">:</span>y},d<span class="pl-k">=</span>{k<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lines<span class="pl-pds">&quot;</span></span>,xa<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>lineArrows<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">:</span>z},n<span class="pl-k">=</span>{k<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>curves<span class="pl-pds">&quot;</span></span>,xa<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>curveArrows<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">:</span>r};<span class="pl-k">if</span>(<span class="pl-c1">W</span>.<span class="pl-smi">OES_standard_derivatives</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>{},p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>){<span class="pl-k">var</span> u<span class="pl-k">=</span>b[p],t<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">u</span>.<span class="pl-c1">source</span>),u<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">u</span>.<span class="pl-c1">target</span>);(c[t]<span class="pl-k">||</span>(c[t]<span class="pl-k">=</span>{}))[u]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">for</span>(p<span class="pl-k">=</span><span class="pl-c1">0</span>;p<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;p<span class="pl-k">++</span>){<span class="pl-k">var</span> t<span class="pl-k">=</span>b[p],u<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">t</span>.<span class="pl-c1">source</span>),k<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">t</span>.<span class="pl-c1">target</span>);u<span class="pl-k">===</span>k<span class="pl-k">?</span>(<span class="pl-smi">t</span>.<span class="pl-smi">t</span><span class="pl-k">=</span><span class="pl-c1">2</span>,u<span class="pl-k">=</span>y,k<span class="pl-k">=</span>f)<span class="pl-k">:</span>(k<span class="pl-k">=</span>c[k])<span class="pl-k">&amp;&amp;</span>k[u]<span class="pl-k">?</span>(<span class="pl-smi">t</span>.<span class="pl-smi">t</span><span class="pl-k">=</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span>r,k<span class="pl-k">=</span>n)<span class="pl-k">:</span>(<span class="pl-smi">t</span>.<span class="pl-smi">t</span><span class="pl-k">=</span><span class="pl-c1">0</span>,u<span class="pl-k">=</span>z,k<span class="pl-k">=</span>d);<span class="pl-c1">P</span>.<span class="pl-c1">push</span>(k);<span class="pl-c1">Q</span>[p]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-smi">u</span>.<span class="pl-c1">push</span>(t)}}<span class="pl-k">else</span> <span class="pl-k">for</span>(f<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">++</span>)n<span class="pl-k">=</span>b[f],p<span class="pl-k">=</span>c,<span class="pl-en">l</span>(<span class="pl-smi">n</span>.<span class="pl-c1">source</span>)<span class="pl-k">!==</span><span class="pl-en">l</span>(<span class="pl-smi">n</span>.<span class="pl-c1">target</span>)<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>d,<span class="pl-smi">n</span>.<span class="pl-smi">t</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">z</span>.<span class="pl-c1">push</span>(n)),<span class="pl-c1">P</span>.<span class="pl-c1">push</span>(p),<span class="pl-c1">Q</span>[f]<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">d</span>.<span class="pl-c1">length</span>})();f<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">new</span> <span class="pl-en">e</span>[f](a,b)).<span class="pl-c1">apply</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-c1">normalize</span>(a);<span class="pl-c1">G</span>.<span class="pl-smi">a</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">color</span><span class="pl-k">?</span>a<span class="pl-k">:</span>[],t);<span class="pl-c1">G</span>.<span class="pl-smi">wc</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>a[<span class="pl-c1">0</span>].<span class="pl-c1">color</span><span class="pl-k">?</span>a<span class="pl-k">:</span>[],t);<span class="pl-c1">A</span>.<span class="pl-c1">label</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">T</span>.<span class="pl-c1">clear</span>(),<span class="pl-c1">G</span>.<span class="pl-smi">labels</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,c,a,p));<span class="pl-c1">G</span>.<span class="pl-smi">Ja</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,z,<span class="pl-c1">Y</span>.<span class="pl-smi">Ja</span>);<span class="pl-c1">W</span>.<span class="pl-smi">OES_standard_derivatives</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">G</span>.<span class="pl-smi">Ga</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,r,<span class="pl-c1">Y</span>.<span class="pl-smi">Ga</span>),<span class="pl-c1">G</span>.<span class="pl-smi">Fa</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,y,<span class="pl-c1">Y</span>.<span class="pl-smi">Fa</span>));<span class="pl-c1">E</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">G</span>.<span class="pl-smi">Lb</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,z,<span class="pl-c1">F</span>.<span class="pl-smi">Lb</span>),<span class="pl-c1">W</span>.<span class="pl-smi">OES_standard_derivatives</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">G</span>.<span class="pl-smi">Ab</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,r,<span class="pl-c1">F</span>.<span class="pl-smi">Ab</span>),<span class="pl-c1">G</span>.<span class="pl-smi">yb</span>.<span class="pl-c1">set</span>(m,<span class="pl-smi">x</span>.<span class="pl-smi">m</span>,n,y,<span class="pl-c1">F</span>.<span class="pl-smi">yb</span>)));</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(){b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-c1">set</span>(<span class="pl-smi">q</span>.<span class="pl-smi">a</span>,<span class="pl-smi">q</span>.<span class="pl-smi">i</span>)}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">d</span>.<span class="pl-en">fb</span>(a);<span class="pl-c1">D</span>.<span class="pl-en">fb</span>(a);b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>})()};<span class="pl-v">this</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-c1">G</span>[b].<span class="pl-en">update</span>(m,d,f,<span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">zb</span>(b,f,d,d,d,d)}}})};<span class="pl-v">this</span>.<span class="pl-en">find</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-en">ab</span>(r).<span class="pl-c1">find</span>(r,a,b,d,<span class="pl-smi">h</span>.<span class="pl-c1">size</span>,f,c)};<span class="pl-v">this</span>.<span class="pl-en">Cb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">c</span>,<span class="pl-smi">p</span>){<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-en">ab</span>(r).<span class="pl-en">Cb</span>(r,a,b,d,f,<span class="pl-smi">h</span>.<span class="pl-c1">size</span>,c,p)};<span class="pl-v">this</span>.<span class="pl-en">Vb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">n</span>.<span class="pl-smi">a</span>[b]<span class="pl-k">=</span>a;(<span class="pl-smi">n</span>.<span class="pl-smi">a</span>[<span class="pl-c1">0</span>].<span class="pl-c1">color</span><span class="pl-k">?</span><span class="pl-c1">G</span>.<span class="pl-smi">wc</span><span class="pl-k">:</span><span class="pl-c1">G</span>.<span class="pl-smi">a</span>).<span class="pl-en">Ma</span>(m,a,b,t);<span class="pl-c1">G</span>.<span class="pl-smi">labels</span>.<span class="pl-en">Ma</span>(m,a,b,p);<span class="pl-c1">M</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">M</span>.<span class="pl-en">update</span>(r,<span class="pl-s"><span class="pl-pds">&quot;</span>nodes<span class="pl-pds">&quot;</span></span>,b,a)};<span class="pl-v">this</span>.<span class="pl-en">Ub</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">P</span>[b],f<span class="pl-k">=</span><span class="pl-c1">Q</span>[b];<span class="pl-smi">d</span>.<span class="pl-smi">d</span>[f]<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-smi">i</span>[b]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">a;<span class="pl-c1">G</span>[<span class="pl-smi">d</span>.<span class="pl-smi">k</span>].<span class="pl-en">Ma</span>(m,a,f,<span class="pl-c1">Y</span>[<span class="pl-smi">d</span>.<span class="pl-smi">k</span>]);<span class="pl-c1">E</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>[<span class="pl-smi">d</span>.<span class="pl-smi">xa</span>].<span class="pl-en">Ma</span>(m,a,f,<span class="pl-c1">F</span>[<span class="pl-smi">d</span>.<span class="pl-smi">xa</span>]);<span class="pl-c1">M</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">M</span>.<span class="pl-en">update</span>(r,<span class="pl-smi">d</span>.<span class="pl-smi">k</span>,f,a)};<span class="pl-k">var</span> <span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">X</span><span class="pl-k">=</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,title<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};<span class="pl-v">this</span>.<span class="pl-en">Dc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">n</span>.<span class="pl-smi">a</span>[a]<span class="pl-k">!==</span><span class="pl-c1">X</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">U</span><span class="pl-k">++</span>,<span class="pl-smi">n</span>.<span class="pl-en">Vb</span>(<span class="pl-c1">X</span>,a))};<span class="pl-k">var</span> aa<span class="pl-k">=</span>{source<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},target<span class="pl-k">:</span>{x<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,y<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>}};<span class="pl-v">this</span>.<span class="pl-en">Cc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">n</span>.<span class="pl-smi">i</span>[a]<span class="pl-k">!==</span>aa<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">V</span><span class="pl-k">++</span>,<span class="pl-smi">n</span>.<span class="pl-en">Ub</span>(aa,a))};<span class="pl-v">this</span>.<span class="pl-en">Ua</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">U</span>};<span class="pl-v">this</span>.<span class="pl-en">Ta</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">V</span>};<span class="pl-k">var</span> ba<span class="pl-k">=</span>{line<span class="pl-k">:</span><span class="pl-c1">0</span>,dashed<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>chain-dotted<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,dotted<span class="pl-k">:</span><span class="pl-c1">3</span>};<span class="pl-v">this</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">i</span><span class="pl-k">=</span>[];<span class="pl-k">var</span> <span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">Yc</span>(m,<span class="pl-s"><span class="pl-pds">&quot;</span>OES_standard_derivatives<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>(m),<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">gb</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>{elements<span class="pl-k">:</span>[],</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">G</span>[a]<span class="pl-k">=</span>b;<span class="pl-c1">G</span>.<span class="pl-c1">elements</span>.<span class="pl-c1">push</span>(b)}}}.<span class="pl-c1">call</span>(<span class="pl-v">this</span>);q<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>precision mediump float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec4 color;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform sampler2D texture;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec2 tc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>];f<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>precision mediump float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform lowp sampler2D texture;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mediump vec4 color;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mediump float height_font;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform float type;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>float u_buffer = 192.0 / 256.0;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>float u_gamma = 4.0 * 1.4142 / height_font;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying mediump vec2 tc;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>void main() {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  if(type &gt; 0.5){<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    float tx=texture2D(texture, tc).r;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    float a= smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, tx);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    gl_FragColor=vec4(color.rgb, a * color.a);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }else{<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>    gl_FragColor = color * texture2D(texture, vec2(tc.s, tc.t));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>  }<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>];v<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>   if(type &gt;= 2.5){,      part = fract(part*3.0);,      if(part &lt; 0.5) discard;,   }else if(type &gt;= 1.5){,      if(part &lt; 0.15) discard;,      if(part &gt; 0.30 &amp;&amp; part &lt; 0.45) discard;,   }else if(type &gt;= 0.5){,      if(part &lt; 0.5) discard;,   }<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>#extension GL_OES_standard_derivatives : enable,#ifdef GL_ES,precision highp float;,#endif,uniform float width;,uniform vec4 color;,uniform float type;,uniform float lineStepSize;,uniform float lineSize;,varying vec2 c;,varying vec2 v_lengthSoFar;,void main(void) {,   float part = abs(fract(length(v_lengthSoFar)*lineStepSize*lineSize));<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(v).<span class="pl-c1">concat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 px = dFdx(c);{   vec2 py = dFdy(c);{   float fx = 2.0 * c.x * px.x - px.y;{   float fy = 2.0 * c.y * py.x - py.y;{   float sd = (c.x * c.x - c.y) / sqrt(fx * fx + fy * fy);{   float alpha = 1.0 - abs(sd) / width;{   if (alpha &lt; 0.0) discard;{   gl_FragColor = vec4(color.r, color.g, color.b, min(alpha, 1.0));{}<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>));</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">C</span><span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 curveShift;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>vec4 getShiftCurve(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 shiftN = vec2(curveShift.x, aspect2 * curveShift.y);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   float length = length(screen * shiftN);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   return vec4(exc * (length == 0.0 ? vec2(0, 0) : shiftN * 0.5 / length), 0, 0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 circleShift;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>vec4 getShiftCircle(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   return vec4(size*circleShift,0,0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>];<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lines<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>precision mediump float;,attribute vec2 position;,attribute vec2 normal;,attribute vec2 lengthSoFar;,uniform float exc;,uniform vec2 size;,uniform vec2 screen;,uniform float aspect2;,uniform float aspect;,uniform vec2 width;,uniform mat4 transform;,varying vec2 n;,varying vec2 v_lengthSoFar;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle() + vec4(width * normal, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec4 p = transform*vec4(lengthSoFar,0,0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   v_lengthSoFar = vec2(p.x, p.y/aspect);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   n = normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),<span class="pl-s"><span class="pl-pds">&quot;</span>precision mediump float;,uniform float type;,uniform vec4 color;,varying vec2 n;,varying vec2 v_lengthSoFar;,uniform float lineSize;,void main(void) {,   float part = abs(fract(length(v_lengthSoFar)*lineSize*5.0));<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(v).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_FragColor = vec4(color.r, color.g, color.b, color.a - length(n));<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">b</span>.<span class="pl-smi">ua</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ua</span>,<span class="pl-smi">a</span>.<span class="pl-c1">M</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">screen</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">2.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>;<span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">size</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Mb</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">120</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">D</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">S</span>,<span class="pl-smi">a</span>.<span class="pl-c1">S</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>,<span class="pl-en">J</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">type</span>));<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)}));<span class="pl-c1">W</span>.<span class="pl-smi">OES_standard_derivatives</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>curves<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>precision highp float;,attribute vec2 position;,attribute vec2 normal;,attribute vec2 curve;,attribute vec2 lengthSoFar;,uniform vec2 size;,uniform float exc;,uniform vec2 screen;,uniform float aspect2;,uniform float aspect;,uniform mat4 transform;,varying vec2 v_lengthSoFar;,varying vec2 c;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 n = vec2(normal.x, aspect2 * normal.y);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   float length = length(screen * n);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   n = length == 0.0 ? vec2(0, 0) : n / length;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle() + vec4(exc * n, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   c = curve;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec4 p = transform*vec4(lengthSoFar,0,0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   v_lengthSoFar = vec2(p.x, p.y/aspect);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">S</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ua</span>,<span class="pl-smi">a</span>.<span class="pl-c1">M</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">screen</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">2.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>;</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">size</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Mb</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">120</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">D</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">S</span>,<span class="pl-smi">a</span>.<span class="pl-c1">S</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>,<span class="pl-en">J</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">type</span>));<span class="pl-smi">b</span>.<span class="pl-smi">eb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">eb</span>,<span class="pl-c1">5</span>);<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)})),<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circles<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>precision highp float;,attribute vec2 position;,attribute vec2 normal;,attribute vec2 curve;,attribute vec2 lengthSoFar;,uniform float exc;,uniform vec2 screen;,uniform float aspect2;,uniform float aspect;,uniform vec2 size;,uniform mat4 transform;,varying vec2 c;,varying vec2 v_lengthSoFar;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle() + vec4(size * normal, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   c = curve;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec4 p = transform*vec4(size * lengthSoFar,0,0);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   v_lengthSoFar = vec2(p.x, p.y/aspect);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),<span class="pl-c1">S</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">b</span>.<span class="pl-smi">ua</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ua</span>,<span class="pl-smi">a</span>.<span class="pl-c1">M</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span>,<span class="pl-en">J</span>(<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">type</span>));<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">screen</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">2.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>;<span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">size</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Mb</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">120</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">D</span>,</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">D</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-c1">S</span>,<span class="pl-smi">a</span>.<span class="pl-c1">S</span>);<span class="pl-smi">b</span>.<span class="pl-smi">eb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">b</span>.<span class="pl-smi">eb</span>,<span class="pl-c1">5</span><span class="pl-k">/</span><span class="pl-c1">3</span>);<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">b</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)})));<span class="pl-c1">E</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span>(v<span class="pl-k">=</span>{wb<span class="pl-k">:</span>{xc<span class="pl-k">:</span><span class="pl-c1">1</span>}},<span class="pl-en">S</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">I</span>(a,<span class="pl-en">O</span>(),<span class="pl-c1">.2</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">d</span>.<span class="pl-smi">offset</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">d</span>.<span class="pl-smi">Oc</span>,b,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">S</span><span class="pl-k">*</span>b);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">d</span>.<span class="pl-smi">ua</span>,<span class="pl-smi">a</span>.<span class="pl-c1">M</span>);<span class="pl-smi">d</span>.<span class="pl-smi">kc</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">d</span>.<span class="pl-smi">kc</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">h</span>.<span class="pl-c1">size</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">M</span>);<span class="pl-smi">d</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">2.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>,<span class="pl-smi">d</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">d</span>.<span class="pl-c1">size</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>));<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">d</span>.<span class="pl-smi">screen</span>,<span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">d</span>.<span class="pl-c1">D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">D</span>);<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">d</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)},<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lineArrows<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>arrow<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;,attribute vec2 direction;,attribute vec2 textureCoord;,attribute float offsetMul;,uniform float offset;,uniform vec2 arrowsize;,uniform vec2 size;,uniform vec2 screen;,uniform float exc;,uniform float aspect2;,uniform mat4 transform;,varying vec2 tc;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 u = direction / length(screen * direction);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 v = vec2(u.y, -aspect2 * u.x);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   v = v / length(screen * v);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle()  + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),q,<span class="pl-c1">S</span>,v)),<span class="pl-c1">W</span>.<span class="pl-smi">OES_standard_derivatives</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>curveArrows<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>arrow<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;,attribute vec2 direction;,attribute vec2 textureCoord;,attribute float offsetMul;,uniform float offset;,uniform vec2 arrowsize;,uniform vec2 size;,uniform float exc;,uniform float cexc;,uniform vec2 screen;,uniform float aspect2;,uniform mat4 transform;,varying vec2 tc;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 u = normalize(vec2(direction.y, -aspect2 * direction.x));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   u = normalize(direction - cexc * u / length(screen * u));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   u = u / length(screen * u);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 v = vec2(u.y, -aspect2 * u.x);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   v = v / length(screen * v);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle() + vec4(arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),q,<span class="pl-c1">S</span>,v)),<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>circleArrows<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">E</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>arrow<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;,attribute vec2 direction;,attribute vec2 textureCoord;,attribute float offsetMul;,uniform float offset;,uniform vec2 arrowsize;,uniform vec2 size;,uniform vec2 screen;,uniform float exc;,uniform float aspect2;,uniform mat4 transform;,varying vec2 tc;<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">concat</span>(<span class="pl-c1">C</span>).<span class="pl-c1">concat</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 u = direction;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   vec2 v = vec2(direction.y, -direction.x);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = getShiftCurve() + getShiftCircle() + vec4((arrowsize.x * (0.5 - textureCoord.x) * v - arrowsize.y * textureCoord.y * u - offset * offsetMul * u) / screen, 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>]),q,<span class="pl-c1">S</span>,v))));<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>nodes<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">A</span>,<span class="pl-c1">null</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec2 size;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 transform;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec2 tc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>],q,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">B</span>(a),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">d</span>.<span class="pl-c1">size</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">d</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)}));<span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>nodesColored<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">A</span>,<span class="pl-c1">null</span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec4 color;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec2 size;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 transform;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec2 tc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec4 c;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = vec4(size * (textureCoord - vec2(0.5, 0.5)), 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   c = color;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>],[<span class="pl-s"><span class="pl-pds">&quot;</span>precision mediump float;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform sampler2D texture;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec2 tc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec4 c;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_FragColor = c * texture2D(texture, vec2(tc.s, tc.t));<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-en">B</span>(a);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>.<span class="pl-c1">size</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,b<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>)}));<span class="pl-c1">A</span>.<span class="pl-c1">label</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">G</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>labels<span class="pl-pds">&quot;</span></span>,<span class="pl-k">new</span> <span class="pl-en">a</span>(m,<span class="pl-c1">A</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>label<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 position;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 relative;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>attribute vec2 textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform float offset;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform vec2 scale;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform float fontScale;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>uniform mat4 transform;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>varying vec2 tc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>void main(void) {<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   gl_Position = vec4(scale * (relative*fontScale + vec2(0, (2.0 * step(position.y, 0.5) - 1.0) * offset)), 0, 0) + transform * vec4(position, 0, 1);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>   tc = textureCoord;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>],</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">B</span>(a))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">label</span>.<span class="pl-smi">font</span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ga</span>.<span class="pl-c1">H</span>;<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">f</span>.<span class="pl-c1">type</span>,<span class="pl-c1">T</span>.<span class="pl-en">qc</span>(b)<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">T</span>.<span class="pl-en">Db</span>(b);<span class="pl-smi">c</span>.<span class="pl-en">Ec</span>(b,d,<span class="pl-c1">D</span>);<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">fontSize</span>;(b<span class="pl-k">=</span>(b<span class="pl-k">||</span>{}).<span class="pl-c1">size</span><span class="pl-k">||</span>c)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&amp;&amp;</span>(p<span class="pl-k">=</span>b<span class="pl-k">/</span>c);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">f</span>.<span class="pl-smi">Tc</span>,p);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">f</span>.<span class="pl-smi">Wc</span>,c);<span class="pl-smi">m</span>.<span class="pl-en">uniform1f</span>(<span class="pl-smi">f</span>.<span class="pl-smi">offset</span>,<span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span>);<span class="pl-smi">m</span>.<span class="pl-en">uniform2f</span>(<span class="pl-smi">f</span>.<span class="pl-smi">scale</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,<span class="pl-c1">1</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>);<span class="pl-smi">g</span>.<span class="pl-en">za</span>(m,<span class="pl-smi">f</span>.<span class="pl-c1">color</span>,<span class="pl-smi">a</span>.<span class="pl-c1">style</span>.<span class="pl-c1">color</span>)}));<span class="pl-k">if</span>(<span class="pl-smi">x</span>.<span class="pl-smi">fb</span>){q<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">m</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> ga <span class="pl-k">in</span> q)f<span class="pl-k">=</span>q[ga],<span class="pl-smi">f</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-c1">get</span>(m,<span class="pl-smi">f</span>.<span class="pl-smi">o</span>,w),<span class="pl-smi">f</span>.<span class="pl-smi">ba</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">D</span>.<span class="pl-c1">get</span>(m,<span class="pl-smi">f</span>.<span class="pl-smi">ba</span>.<span class="pl-smi">o</span>)}}},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-smi">w</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> h))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">ra</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">3</span><span class="pl-k">&lt;=</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(<span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-v">arguments</span>[<span class="pl-c1">0</span>],<span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-v">arguments</span>[<span class="pl-c1">1</span>],<span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-v">arguments</span>[<span class="pl-c1">2</span>],<span class="pl-c1">3</span><span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-smi">ra</span><span class="pl-k">=</span><span class="pl-v">arguments</span>[<span class="pl-c1">3</span>]))<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(g)<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgba<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">exec</span>(g),<span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-smi">ra</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">4</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(g)<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>), <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">exec</span>(g),<span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%</span>, <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%</span>, <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(g)<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>rgb<span class="pl-cce">\(</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%</span>, <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%</span>, <span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-cce">\%\)</span><span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">exec</span>(g),<span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">1</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>,<span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">2</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>,<span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">parseInt</span>(g[<span class="pl-c1">3</span>],<span class="pl-c1">10</span>)<span class="pl-k">/</span><span class="pl-c1">100</span>)<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\#</span>(<span class="pl-c1">[<span class="pl-c1">0-9a-f</span>]</span><span class="pl-k">{6}</span>)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(g)<span class="pl-k">?</span>(g<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">g</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>),<span class="pl-c1">16</span>),<span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span>(g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span>(g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>,<span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span>(g<span class="pl-k">&amp;</span><span class="pl-c1">255</span>)<span class="pl-k">/</span><span class="pl-c1">255</span>)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">r</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">W</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">T</span><span class="pl-k">=</span><span class="pl-c1">0</span>}},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);}<span class="pl-en">v</span>(g,<span class="pl-c1">null</span>,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>initExtensions<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getSupportedExtensions</span>(),c<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-v">arguments</span>[b];(c[k]<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(k))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">getExtension</span>(k)}<span class="pl-k">return</span> c}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>createShader<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createShader</span>(e);<span class="pl-smi">a</span>.<span class="pl-en">shaderSource</span>(e,c);</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">compileShader</span>(e);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">getShaderParameter</span>(e,<span class="pl-smi">a</span>.<span class="pl-c1">COMPILE_STATUS</span>)<span class="pl-k">?</span>e<span class="pl-k">:</span>(<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-smi">a</span>.<span class="pl-en">getShaderInfoLog</span>(e)),<span class="pl-c1">null</span>)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>createTexture<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">k</span>(){<span class="pl-smi">r</span>.<span class="pl-smi">onload</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,q);(b<span class="pl-k">||</span>{}).<span class="pl-smi">Sb</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_FLIP_Y_WEBGL</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>),<span class="pl-smi">a</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LUMINANCE</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LUMINANCE</span>,<span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_BYTE</span>,r),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MAG_FILTER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LINEAR</span>),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MIN_FILTER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LINEAR</span>),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_WRAP_S</span>,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">CLAMP_TO_EDGE</span>),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_WRAP_T</span>,<span class="pl-smi">a</span>.<span class="pl-c1">CLAMP_TO_EDGE</span>))<span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-smi">a</span>.<span class="pl-c1">UNPACK_FLIP_Y_WEBGL</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">a</span>.<span class="pl-en">texImage2D</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">RGBA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">RGBA</span>,<span class="pl-smi">a</span>.<span class="pl-c1">UNSIGNED_BYTE</span>,r),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MAG_FILTER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LINEAR</span>),<span class="pl-smi">a</span>.<span class="pl-en">texParameteri</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_MIN_FILTER</span>,<span class="pl-smi">a</span>.<span class="pl-c1">LINEAR</span>));<span class="pl-smi">a</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">a</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">null</span>);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>()}<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">createTexture</span>(),r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Image</span>;<span class="pl-smi">r</span>.<span class="pl-smi">onload</span><span class="pl-k">=</span>k;<span class="pl-smi">r</span>.<span class="pl-smi">src</span><span class="pl-k">=</span>e;<span class="pl-smi">r</span>.<span class="pl-smi">naturalWidth</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">r</span>.<span class="pl-smi">naturalHeight</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">k</span>();<span class="pl-smi">q</span>.<span class="pl-smi">Gb</span><span class="pl-k">=</span>r;<span class="pl-k">return</span> q}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>uniformColor<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-smi">a</span>.<span class="pl-en">uniform4f</span>(e,</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">r</span>,<span class="pl-smi">c</span>.<span class="pl-c1">W</span>,<span class="pl-smi">c</span>.<span class="pl-c1">T</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ra</span>)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ortho<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">k</span>,<span class="pl-smi">q</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(a<span class="pl-k">-</span>e),g<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(c<span class="pl-k">-</span>b),m<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">/</span>(k<span class="pl-k">-</span>q),h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">16</span>);h[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>r;h[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">5</span>]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>g;h[<span class="pl-c1">6</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">7</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">8</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">9</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">10</span>]<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>m;h[<span class="pl-c1">11</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;h[<span class="pl-c1">12</span>]<span class="pl-k">=</span>(a<span class="pl-k">+</span>e)<span class="pl-k">*</span>r;h[<span class="pl-c1">13</span>]<span class="pl-k">=</span>(b<span class="pl-k">+</span>c)<span class="pl-k">*</span>g;h[<span class="pl-c1">14</span>]<span class="pl-k">=</span>(q<span class="pl-k">+</span>k)<span class="pl-k">*</span>m;h[<span class="pl-c1">15</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> h}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>c[b];<span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">k</span>.<span class="pl-smi">key</span>,k)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">e</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,c);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,e);<span class="pl-k">return</span> b}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">6</span>),e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">3</span>);<span class="pl-en">h</span>(<span class="pl-c1">7</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">b</span>,<span class="pl-smi">k</span>,<span class="pl-smi">q</span>,<span class="pl-smi">r</span>,<span class="pl-smi">g</span>,<span class="pl-smi">m</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">O</span><span class="pl-k">=</span>v<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-smi">c</span>.<span class="pl-smi">sc</span><span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-smi">s</span>),d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,b<span class="pl-k">-</span>(<span class="pl-c1">J</span><span class="pl-k">-</span>w)<span class="pl-k">*</span>d),f<span class="pl-k">=</span>d<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">G</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">C</span>.<span class="pl-smi">l</span><span class="pl-k">||</span><span class="pl-c1">C</span>.<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">!==</span>f){<span class="pl-c1">C</span>.<span class="pl-smi">l</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>(f);<span class="pl-k">var</span> d<span class="pl-k">=</span>d<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">s</span>,p;<span class="pl-k">for</span>(p <span class="pl-k">in</span> <span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>)<span class="pl-c1">C</span>[p]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(<span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>[p].<span class="pl-c1">size</span><span class="pl-k">*</span>d)}}function f(a,b){if(a.size){var d=0;b.forEach(function(b){d+=a.size(C,b)});return d}return b.length}var x=this;if(!(this instanceof c))throw new TypeError(&quot;Cannot call a class as a function&quot;);</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">a</span>(b,<span class="pl-smi">r</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),h),<span class="pl-c1">E</span><span class="pl-k">=</span>[],<span class="pl-c1">I</span><span class="pl-k">=</span>[],<span class="pl-c1">B</span><span class="pl-k">=</span>{},<span class="pl-c1">C</span><span class="pl-k">=</span>{},<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,v<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">K</span><span class="pl-k">=</span>{<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">k</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> p<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-smi">l</span>,b,d],n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span>k;n<span class="pl-k">++</span>)<span class="pl-smi">p</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);b<span class="pl-k">=</span>[<span class="pl-k">void</span> <span class="pl-c1">0</span>,b,d];<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>f;d<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> u <span class="pl-k">in</span> a)<span class="pl-s"><span class="pl-pds">&quot;</span>indices<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>u<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-smi">l</span>.<span class="pl-c1">apply</span>(x,p)<span class="pl-k">:</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">=</span>a[u],<span class="pl-smi">c</span>.<span class="pl-smi">g</span>.<span class="pl-c1">apply</span>(x,b))}};<span class="pl-v">this</span>.<span class="pl-en">set</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">t</span>,<span class="pl-smi">n</span>,<span class="pl-smi">z</span>){<span class="pl-k">function</span> <span class="pl-en">p</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a)<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)d[b]<span class="pl-k">=</span>a[b]}<span class="pl-k">var</span> d<span class="pl-k">=</span>{};<span class="pl-en">b</span>(k);<span class="pl-en">b</span>(a);q<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">b</span>(k[q]),a<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(a[q]));<span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">color</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">new</span> <span class="pl-en">e</span>(<span class="pl-smi">d</span>.<span class="pl-c1">color</span>);<span class="pl-k">return</span> d}function u(b){var d=E[J];if(!d){E[J]=d={};for(var f in C)d[f]=</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">createBuffer</span>()}<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>)<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,d[c]),<span class="pl-smi">a</span>.<span class="pl-en">bufferData</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-c1">C</span>[c],<span class="pl-smi">a</span>.<span class="pl-c1">STATIC_DRAW</span>);<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,<span class="pl-smi">d</span>.<span class="pl-smi">l</span>);<span class="pl-smi">a</span>.<span class="pl-en">bufferData</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,<span class="pl-c1">C</span>.<span class="pl-smi">l</span>,<span class="pl-smi">a</span>.<span class="pl-c1">STATIC_DRAW</span>);<span class="pl-smi">d</span>.<span class="pl-c1">G</span><span class="pl-k">=</span>v;<span class="pl-smi">d</span>.<span class="pl-smi">s</span><span class="pl-k">=</span><span class="pl-c1">O</span>;<span class="pl-smi">b</span>.<span class="pl-smi">Ea</span>.<span class="pl-c1">push</span>(d);<span class="pl-c1">J</span><span class="pl-k">++</span>}<span class="pl-k">for</span>(<span class="pl-k">var</span> y<span class="pl-k">=</span>{},g<span class="pl-k">=</span>{},r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span><span class="pl-smi">n</span>.<span class="pl-c1">length</span>;r<span class="pl-k">++</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span>n[r],<span class="pl-c1">N</span><span class="pl-k">=</span>y[<span class="pl-smi">m</span>.<span class="pl-c1">style</span>]<span class="pl-k">=</span>y[<span class="pl-smi">m</span>.<span class="pl-c1">style</span>]<span class="pl-k">||</span>[];<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-c1">N</span>.<span class="pl-smi">cb</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">N</span>.<span class="pl-smi">cb</span><span class="pl-k">=</span>[]);<span class="pl-c1">N</span>.<span class="pl-smi">cb</span>.<span class="pl-c1">push</span>(r);<span class="pl-smi">m</span>.<span class="pl-smi">dd</span><span class="pl-k">=</span>g[<span class="pl-smi">m</span>.<span class="pl-c1">style</span>]<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>g[<span class="pl-smi">m</span>.<span class="pl-c1">style</span>]<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span>g[<span class="pl-smi">m</span>.<span class="pl-c1">style</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-c1">N</span>.<span class="pl-c1">push</span>(m)}<span class="pl-c1">J</span><span class="pl-k">=</span>w<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">x</span>.<span class="pl-smi">nb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span>);<span class="pl-smi">x</span>.<span class="pl-smi">ob</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span>);<span class="pl-smi">x</span>.<span class="pl-smi">mb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">x</span>.<span class="pl-smi">rb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">n</span>.<span class="pl-c1">length</span>);<span class="pl-c1">I</span><span class="pl-k">=</span>[];<span class="pl-k">for</span>(<span class="pl-k">var</span> h <span class="pl-k">in</span> y){w<span class="pl-k">=</span><span class="pl-c1">J</span>;n<span class="pl-k">=</span>{style<span class="pl-k">:</span><span class="pl-en">p</span>(b[h]),Ea<span class="pl-k">:</span>[],Fc<span class="pl-k">:</span>h};g<span class="pl-k">=</span><span class="pl-en">z</span>(<span class="pl-smi">n</span>.<span class="pl-c1">style</span>);<span class="pl-smi">g</span>.<span class="pl-smi">s</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">s</span><span class="pl-k">||</span><span class="pl-c1">4</span>;<span class="pl-smi">g</span>.<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">G</span><span class="pl-k">||</span><span class="pl-c1">6</span>;r<span class="pl-k">=</span>y[h];m<span class="pl-k">=</span><span class="pl-en">f</span>(g,r);<span class="pl-en">d</span>(g,m);<span class="pl-k">for</span>(<span class="pl-k">var</span> <span class="pl-c1">N</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">sc</span>,<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">K</span><span class="pl-k">&lt;</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;<span class="pl-c1">K</span><span class="pl-k">++</span>){<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">size</span><span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">size</span>(<span class="pl-c1">C</span>,r[<span class="pl-c1">K</span>])<span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">O</span><span class="pl-k">+</span><span class="pl-c1">D</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-smi">s</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span>v<span class="pl-k">+</span><span class="pl-c1">D</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-c1">G</span>;<span class="pl-c1">P</span><span class="pl-k">&gt;=</span><span class="pl-c1">N</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">u</span>(n),<span class="pl-en">d</span>(g,m),<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">O</span>,<span class="pl-c1">Q</span><span class="pl-k">=</span>v);<span class="pl-smi">g</span>.<span class="pl-c1">set</span>(<span class="pl-c1">C</span>,r[<span class="pl-c1">K</span>],<span class="pl-c1">O</span>,v);<span class="pl-k">var</span> <span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-smi">cb</span>[<span class="pl-c1">K</span>];<span class="pl-smi">x</span>.<span class="pl-smi">nb</span>[<span class="pl-c1">R</span>]<span class="pl-k">=</span>v;<span class="pl-smi">x</span>.<span class="pl-smi">ob</span>[<span class="pl-c1">R</span>]<span class="pl-k">=</span><span class="pl-c1">O</span>;<span class="pl-smi">x</span>.<span class="pl-smi">mb</span>[<span class="pl-c1">R</span>]<span class="pl-k">=</span><span class="pl-c1">J</span>;<span class="pl-smi">x</span>.<span class="pl-smi">rb</span>[<span class="pl-c1">R</span>]<span class="pl-k">=</span><span class="pl-c1">D</span>;v<span class="pl-k">=</span><span class="pl-c1">Q</span>;<span class="pl-c1">O</span><span class="pl-k">=</span><span class="pl-c1">P</span>}<span class="pl-en">u</span>(n);<span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">I</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>);<span class="pl-c1">B</span>[<span class="pl-v">this</span>.<span class="pl-smi">Fc</span>]<span class="pl-k">=</span><span class="pl-v">this</span>}.<span class="pl-en">bind</span>(n);t<span class="pl-k">?</span><span class="pl-en">t</span>(n,g)<span class="pl-k">:</span><span class="pl-en">g</span>()}};<span class="pl-k">var</span> z<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-en">update</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,p<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>[b].<span class="pl-c1">size</span>;<span class="pl-c1">I</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">n</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line"><span class="pl-en">f</span>(<span class="pl-smi">n</span>.<span class="pl-c1">style</span>);<span class="pl-smi">k</span>.<span class="pl-smi">s</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">s</span><span class="pl-k">||</span><span class="pl-c1">4</span>;<span class="pl-smi">n</span>.<span class="pl-smi">Ea</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">f</span>){z<span class="pl-k">&amp;&amp;</span><span class="pl-smi">z</span>.<span class="pl-c1">length</span><span class="pl-k">===</span>p<span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">s</span><span class="pl-k">||</span>(z<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(p<span class="pl-k">*</span><span class="pl-smi">f</span>.<span class="pl-smi">s</span>));<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">s</span>;n<span class="pl-k">+=</span>(<span class="pl-smi">k</span>.<span class="pl-c1">size</span><span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">size</span>(f,d[c])<span class="pl-k">:</span><span class="pl-c1">1</span>)<span class="pl-k">*</span><span class="pl-smi">k</span>.<span class="pl-smi">s</span>)<span class="pl-smi">k</span>.<span class="pl-c1">set</span>(z,d[c<span class="pl-k">++</span>],n);<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,f[b]);<span class="pl-smi">a</span>.<span class="pl-en">bufferData</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,z,<span class="pl-smi">a</span>.<span class="pl-c1">DYNAMIC_DRAW</span>)})})};<span class="pl-v">this</span>.<span class="pl-en">Ma</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">f</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-c1">B</span>[<span class="pl-smi">b</span>.<span class="pl-c1">style</span>];c<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-smi">p</span>.<span class="pl-c1">style</span>);<span class="pl-smi">c</span>.<span class="pl-smi">s</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">s</span><span class="pl-k">||</span><span class="pl-c1">4</span>;<span class="pl-smi">c</span>.<span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">G</span><span class="pl-k">||</span><span class="pl-c1">6</span>;<span class="pl-c1">J</span><span class="pl-k">=</span>w<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-smi">Ea</span>[<span class="pl-smi">x</span>.<span class="pl-smi">mb</span>[f]],n<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">size</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">size</span>(p,b)<span class="pl-k">:</span><span class="pl-c1">1</span>,k<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">rb</span>[f];<span class="pl-k">if</span>(n<span class="pl-k">&gt;</span>k)<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot set primitive to new value which has greater size (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>n<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> &gt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>k<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>) - no enough empty space to fill in GL buffer<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line"><span class="pl-k">else</span>{<span class="pl-en">d</span>(c,k);<span class="pl-k">for</span>(<span class="pl-smi">c</span>.<span class="pl-c1">set</span>(<span class="pl-c1">C</span>,b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);n<span class="pl-k">&lt;</span>k;n<span class="pl-k">++</span>)<span class="pl-c1">K</span>.<span class="pl-c1">set</span>(<span class="pl-c1">C</span>,n<span class="pl-k">*</span><span class="pl-smi">c</span>.<span class="pl-smi">s</span>,n<span class="pl-k">*</span><span class="pl-smi">c</span>.<span class="pl-c1">G</span>,<span class="pl-smi">c</span>.<span class="pl-smi">s</span>,<span class="pl-smi">c</span>.<span class="pl-c1">G</span>);b<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">ob</span>[f];f<span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-smi">nb</span>[f];<span class="pl-k">for</span>(<span class="pl-k">var</span> u <span class="pl-k">in</span> <span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>)<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,p[u]),<span class="pl-smi">a</span>.<span class="pl-en">bufferSubData</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ARRAY_BUFFER</span>,<span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>[u].<span class="pl-c1">size</span><span class="pl-k">*</span>b<span class="pl-k">*</span><span class="pl-c1">C</span>[u].<span class="pl-c1">BYTES_PER_ELEMENT</span>,<span class="pl-c1">C</span>[u]);<span class="pl-smi">a</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,<span class="pl-smi">p</span>.<span class="pl-smi">l</span>);<span class="pl-smi">a</span>.<span class="pl-en">bufferSubData</span>(<span class="pl-smi">a</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,f<span class="pl-k">*</span><span class="pl-c1">C</span>.<span class="pl-smi">l</span>.<span class="pl-c1">BYTES_PER_ELEMENT</span>,<span class="pl-c1">C</span>.<span class="pl-smi">l</span>)}};<span class="pl-v">this</span>.<span class="pl-en">F</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">ga</span><span class="pl-k">=</span><span class="pl-c1">A</span>;<span class="pl-smi">b</span>.<span class="pl-en">uniformMatrix4fv</span>(<span class="pl-c1">A</span>.<span class="pl-c1">H</span>.<span class="pl-smi">transform</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-smi">transform</span>);<span class="pl-c1">I</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">d</span>.<span class="pl-c1">style</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-en">activeTexture</span>(<span class="pl-smi">b</span>.<span class="pl-c1">TEXTURE0</span>),<span class="pl-smi">b</span>.<span class="pl-en">bindTexture</span>(<span class="pl-smi">b</span>.<span class="pl-c1">TEXTURE_2D</span>,</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">style</span>.<span class="pl-smi">o</span>),<span class="pl-smi">b</span>.<span class="pl-en">uniform1i</span>(<span class="pl-c1">A</span>.<span class="pl-c1">H</span>.<span class="pl-smi">o</span>,<span class="pl-c1">0</span>));<span class="pl-smi">a</span>.<span class="pl-c1">style</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">style</span>;<span class="pl-en">m</span>(a)<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">Ea</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ELEMENT_ARRAY_BUFFER</span>,<span class="pl-smi">a</span>.<span class="pl-smi">l</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> d <span class="pl-k">in</span> <span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">A</span>.<span class="pl-c1">attributes</span>[d];<span class="pl-smi">b</span>.<span class="pl-en">bindBuffer</span>(<span class="pl-smi">b</span>.<span class="pl-c1">ARRAY_BUFFER</span>,a[d]);<span class="pl-smi">b</span>.<span class="pl-en">vertexAttribPointer</span>(<span class="pl-smi">f</span>.<span class="pl-c1">index</span>,<span class="pl-smi">f</span>.<span class="pl-c1">size</span>,<span class="pl-smi">b</span>.<span class="pl-c1">FLOAT</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}<span class="pl-smi">b</span>.<span class="pl-en">drawElements</span>(<span class="pl-smi">b</span>.<span class="pl-c1">TRIANGLES</span>,<span class="pl-smi">a</span>.<span class="pl-c1">G</span>,<span class="pl-smi">b</span>.<span class="pl-c1">UNSIGNED_SHORT</span>,<span class="pl-c1">0</span>)})});<span class="pl-c1">A</span>.<span class="pl-en">hd</span>()}}<span class="pl-en">g</span>(c,<span class="pl-c1">null</span>,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertices<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span>c,e<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>e;b<span class="pl-k">++</span>,k<span class="pl-k">++</span>)a[k]<span class="pl-k">=</span><span class="pl-v">arguments</span>[b]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>singles<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">*</span>c,e<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">e;b<span class="pl-k">++</span>,k<span class="pl-k">++</span>)a[k]<span class="pl-k">=</span><span class="pl-v">arguments</span>[b]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>colors<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">*</span>c,e<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>e;b<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">arguments</span>[b];a[k<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">r</span>;a[k<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">W</span>;a[k<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">T</span>;a[k<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">ra</span>}}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>indices<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">3</span>,k<span class="pl-k">=</span>e,g<span class="pl-k">=</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>g;b<span class="pl-k">++</span>,k<span class="pl-k">++</span>)a[k]<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-v">arguments</span>[b]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>quad<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">k</span>,<span class="pl-smi">e</span>){<span class="pl-smi">c</span>.<span class="pl-en">l</span>(a,k,e,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">0</span>)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>maxBufferSize<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">65536</span>}}]);<span class="pl-k">return</span> c}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>c[b];</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">k</span>.<span class="pl-smi">key</span>,k)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,c);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,e);<span class="pl-k">return</span> b}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>),e<span class="pl-k">=</span>{color<span class="pl-k">:</span><span class="pl-c1">4</span>};<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">b</span>,<span class="pl-smi">k</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> c))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>b;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">Ra</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">createProgram</span>();<span class="pl-smi">b</span>.<span class="pl-en">attachShader</span>(q,<span class="pl-smi">a</span>.<span class="pl-en">createShader</span>(b,<span class="pl-smi">b</span>.<span class="pl-c1">VERTEX_SHADER</span>,k));<span class="pl-smi">b</span>.<span class="pl-en">attachShader</span>(q,<span class="pl-smi">a</span>.<span class="pl-en">createShader</span>(b,<span class="pl-smi">b</span>.<span class="pl-c1">FRAGMENT_SHADER</span>,e));<span class="pl-smi">b</span>.<span class="pl-en">linkProgram</span>(q);<span class="pl-v">this</span>.<span class="pl-c1">H</span><span class="pl-k">=</span>{};k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getProgramParameter</span>(q,</td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">ACTIVE_UNIFORMS</span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>k;e<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getActiveUniform</span>(q,e).<span class="pl-c1">name</span>;<span class="pl-v">this</span>.<span class="pl-c1">H</span>[r]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getUniformLocation</span>(q,r)}g<span class="pl-k">=</span>(g<span class="pl-k">||</span>{}).<span class="pl-smi">wb</span><span class="pl-k">||</span>{};<span class="pl-v">this</span>.<span class="pl-c1">attributes</span><span class="pl-k">=</span>{};k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getProgramParameter</span>(q,<span class="pl-smi">b</span>.<span class="pl-c1">ACTIVE_ATTRIBUTES</span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>k;e<span class="pl-k">++</span>)r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getActiveAttrib</span>(q,e).<span class="pl-c1">name</span>,<span class="pl-v">this</span>.<span class="pl-c1">attributes</span>[r]<span class="pl-k">=</span>{index<span class="pl-k">:</span>e,size<span class="pl-k">:</span>g[r]<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">wb</span>[r]<span class="pl-k">||</span><span class="pl-c1">2</span>}}<span class="pl-en">g</span>(c,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bind<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">useProgram</span>(<span class="pl-v">this</span>.<span class="pl-smi">Ra</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">getProgramParameter</span>(<span class="pl-v">this</span>.<span class="pl-smi">Ra</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">ACTIVE_ATTRIBUTES</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">enableVertexAttribArray</span>(c)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unbind<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">getProgramParameter</span>(<span class="pl-v">this</span>.<span class="pl-smi">Ra</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">ACTIVE_ATTRIBUTES</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">disableVertexAttribArray</span>(c)}}],[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>attribute<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> e}}]);<span class="pl-k">return</span> c}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">}<span class="pl-en">v</span>(g,<span class="pl-c1">null</span>,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>extend<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">1</span>;e<span class="pl-k">&lt;</span><span class="pl-v">arguments</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> <span class="pl-v">arguments</span>[e])a[c]<span class="pl-k">=</span><span class="pl-v">arguments</span>[e][c];<span class="pl-k">return</span> a}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>isObject<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-c1">Object</span>(a)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>emptyObject<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-en">pc</span>(a))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ajax<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> c;c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">c</span>.<span class="pl-en">onreadystatechange</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">4</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">readyState</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">200</span><span class="pl-k">==</span><span class="pl-smi">c</span>.<span class="pl-c1">status</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(<span class="pl-smi">c</span>.<span class="pl-c1">responseText</span>)};<span class="pl-smi">c</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">c</span>.<span class="pl-c1">send</span>()}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span>c[b];<span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">k</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">k</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">k</span>.<span class="pl-smi">key</span>,k)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,c);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,e);<span class="pl-k">return</span> b}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">9</span>),e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">11</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">c</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> c))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);}<span class="pl-en">g</span>(c,<span class="pl-c1">null</span>,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>normalize<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b,e,k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(c)b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">tc</span>,e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">uc</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>,h<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>;b<span class="pl-k">=</span>e<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>k;d<span class="pl-k">++</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>a[d],g<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(g,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>),h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(h,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>);b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,<span class="pl-smi">f</span>.<span class="pl-c1">x</span>);e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(e,<span class="pl-smi">f</span>.<span class="pl-c1">y</span>)}c<span class="pl-k">=</span>{Nb<span class="pl-k">:</span>g,Ob<span class="pl-k">:</span>h,tc<span class="pl-k">:</span>b,uc<span class="pl-k">:</span>e}}g<span class="pl-k">=</span>b<span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">Nb</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-smi">c</span>.<span class="pl-smi">Nb</span><span class="pl-k">-</span>b)<span class="pl-k">:</span>(b<span class="pl-k">-=</span><span class="pl-c1">.5</span>,<span class="pl-c1">1</span>);h<span class="pl-k">=</span>e<span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">Ob</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>(<span class="pl-smi">c</span>.<span class="pl-smi">Ob</span><span class="pl-k">-</span>e)<span class="pl-k">:</span>(e<span class="pl-k">-=</span><span class="pl-c1">.5</span>,<span class="pl-c1">1</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>k;d<span class="pl-k">++</span>)f<span class="pl-k">=</span>a[d],<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>g<span class="pl-k">*</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">-</span>b),<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>h<span class="pl-k">*</span>(<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">-</span>e);<span class="pl-k">return</span> c}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>force<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> a}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>random<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> e}}]);<span class="pl-k">return</span> c}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">10</span>);<span class="pl-smi">w</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-c1">C</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">a</span>,g,q<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span>,x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span>q;x<span class="pl-k">++</span>)g<span class="pl-k">=</span>k[x],<span class="pl-c1">null</span><span class="pl-k">!=</span>g<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">c</span>(g,b,e),<span class="pl-smi">a</span>.<span class="pl-c1">C</span><span class="pl-k">+=</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">C</span>,d<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">C</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-c1">U</span>,f<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">C</span><span class="pl-k">*</span><span class="pl-smi">g</span>.<span class="pl-c1">V</span>);<span class="pl-smi">a</span>.<span class="pl-smi">v</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">v</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">-</span><span class="pl-c1">.5</span>,<span class="pl-smi">a</span>.<span class="pl-smi">v</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">-</span><span class="pl-c1">.5</span>),b<span class="pl-k">*=</span>e[<span class="pl-smi">a</span>.<span class="pl-smi">v</span>.<span class="pl-c1">index</span>],<span class="pl-smi">a</span>.<span class="pl-c1">C</span><span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">Bc</span><span class="pl-k">=</span>b,d<span class="pl-k">+=</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">v</span>.<span class="pl-c1">x</span>,f<span class="pl-k">+=</span>b<span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-smi">v</span>.<span class="pl-c1">y</span>);<span class="pl-smi">a</span>.<span class="pl-c1">U</span><span class="pl-k">=</span>d<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">C</span>;<span class="pl-smi">a</span>.<span class="pl-c1">V</span><span class="pl-k">=</span>f<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">C</span>}function b(a){return function(b,d,c,e){if(b.v!==a){c=b.U-a.x;var f=b.V-a.y;d=e-d;e=c*c+f*f;if(d*d/.64&lt;e)return Infinity&gt;e&amp;&amp;(b=b.C/e,a.ea-=c*b,a.fa-=f*b),!0;b.v&amp;&amp;e&amp;&amp;Infinity&gt;e&amp;&amp;(d=b.Bc/e,a.ea-=c*d,a.fa-=f*d)}return!b.C}}function k(){if(.05&gt;(r*=.99))return r=0,!0;for(var d,f,k,A,E,I=a.length,B=e.length,C=0;C&lt;B;C++)if(f=e[C],k=f.source,f=f.target,</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">k</span>.<span class="pl-c1">x</span>,<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">k</span>.<span class="pl-c1">y</span>,<span class="pl-c1">A</span><span class="pl-k">=</span>d<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">E</span><span class="pl-k">*</span><span class="pl-c1">E</span>)<span class="pl-c1">A</span><span class="pl-k">=</span>r<span class="pl-k">*</span>m[<span class="pl-c1">C</span>]<span class="pl-k">*</span>((<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-c1">A</span>))<span class="pl-k">-</span>h[<span class="pl-c1">C</span>])<span class="pl-k">/</span><span class="pl-c1">A</span>,d<span class="pl-k">*=</span><span class="pl-c1">A</span>,<span class="pl-c1">E</span><span class="pl-k">*=</span><span class="pl-c1">A</span>,<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span>d<span class="pl-k">*</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">weight</span><span class="pl-k">/</span>(<span class="pl-smi">f</span>.<span class="pl-smi">weight</span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-smi">weight</span>)),<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-c1">E</span><span class="pl-k">*</span><span class="pl-c1">A</span>,<span class="pl-smi">k</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>d<span class="pl-k">*</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">A</span>),<span class="pl-smi">k</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span><span class="pl-c1">E</span><span class="pl-k">*</span><span class="pl-c1">A</span>;<span class="pl-k">if</span>(<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-c1">.4</span><span class="pl-k">*</span>r)<span class="pl-k">for</span>(d<span class="pl-k">=</span>q[<span class="pl-c1">0</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,<span class="pl-c1">E</span><span class="pl-k">=</span>q[<span class="pl-c1">1</span>]<span class="pl-k">/</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span><span class="pl-c1">I</span>;k<span class="pl-k">++</span>)f<span class="pl-k">=</span>a[k],<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">+=</span>(d<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)<span class="pl-k">*</span><span class="pl-c1">A</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">+=</span>(<span class="pl-c1">E</span><span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)<span class="pl-k">*</span><span class="pl-c1">A</span>;<span class="pl-en">c</span>(d<span class="pl-k">=</span><span class="pl-en">g</span>(a),r,v);<span class="pl-k">for</span>(<span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">E</span><span class="pl-k">&lt;</span><span class="pl-c1">I</span>;<span class="pl-c1">E</span><span class="pl-k">++</span>)f<span class="pl-k">=</span>a[<span class="pl-c1">E</span>],<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-smi">fixed</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">Gc</span>(<span class="pl-en">b</span>(f));<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-c1">I</span>;d<span class="pl-k">++</span>)f<span class="pl-k">=</span>a[d],<span class="pl-smi">f</span>.<span class="pl-smi">fixed</span><span class="pl-k">?</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">ea</span>,<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">fa</span>)<span class="pl-k">:</span>(<span class="pl-smi">f</span>.<span class="pl-c1">x</span><span class="pl-k">-=</span><span class="pl-c1">.9</span><span class="pl-k">*</span>(<span class="pl-smi">f</span>.<span class="pl-smi">ea</span><span class="pl-k">-</span>(<span class="pl-smi">f</span>.<span class="pl-smi">ea</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">x</span>)),<span class="pl-smi">f</span>.<span class="pl-c1">y</span><span class="pl-k">-=</span><span class="pl-c1">.9</span><span class="pl-k">*</span>(<span class="pl-smi">f</span>.<span class="pl-smi">fa</span><span class="pl-k">-</span>(<span class="pl-smi">f</span>.<span class="pl-smi">fa</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">y</span>)))}<span class="pl-k">var</span> q<span class="pl-k">=</span>[<span class="pl-c1">1</span>,<span class="pl-c1">1</span>],r<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,h<span class="pl-k">=</span>[],m<span class="pl-k">=</span>[],v<span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-en">apply</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(b),c<span class="pl-k">=</span><span class="pl-c1">.3</span><span class="pl-k">/</span>f,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>b;g<span class="pl-k">++</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">a[g];<span class="pl-smi">q</span>.<span class="pl-smi">weight</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">?</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span><span class="pl-k">:</span>c<span class="pl-k">+</span>g<span class="pl-k">%</span>f<span class="pl-k">/</span>f;<span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span><span class="pl-k">:</span>c<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(g<span class="pl-k">/</span>f)<span class="pl-k">/</span>f;<span class="pl-smi">q</span>.<span class="pl-smi">ea</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span>;<span class="pl-smi">q</span>.<span class="pl-smi">fa</span><span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span>;v[g]<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">30</span>}<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>)f<span class="pl-k">=</span>e[b],<span class="pl-smi">f</span>.<span class="pl-c1">source</span>.<span class="pl-smi">weight</span><span class="pl-k">++</span>,<span class="pl-smi">f</span>.<span class="pl-c1">target</span>.<span class="pl-smi">weight</span><span class="pl-k">++</span>,h[b]<span class="pl-k">=</span><span class="pl-c1">15</span>,m[b]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">.1</span>;<span class="pl-k">!</span><span class="pl-en">k</span>(););<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-smi">w</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">v</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-k">return</span>{h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,a<span class="pl-k">:</span>[],v<span class="pl-k">:</span><span class="pl-c1">null</span>,x<span class="pl-k">:</span><span class="pl-c1">null</span>,y<span class="pl-k">:</span><span class="pl-c1">null</span>}}function g(a,b,d,f,c,e){if(!a(b,d,f,c,e)){var k=.5*(d+c),q=.5*(f+e);b=b.a;b[0]&amp;&amp;g(a,b[0],d,f,k,q);b[1]&amp;&amp;g(a,b[1],k,f,c,q);b[2]&amp;&amp;g(a,b[2],d,q,k,e);b[3]&amp;&amp;g(a,b[3],k,q,c,e)}}function a(a,b,d,f,c,k,g,q){if(a.h){var h=</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">x</span>,r<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>h){<span class="pl-k">if</span>(h<span class="pl-k">!==</span>d<span class="pl-k">||</span>r<span class="pl-k">!==</span>f){<span class="pl-k">var</span> z<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">v</span>;<span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">v</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">e</span>(a,z,h,r,c,k,g,q)}<span class="pl-en">e</span>(a,b,d,f,c,k,g,q)}<span class="pl-k">else</span> <span class="pl-smi">a</span>.<span class="pl-c1">x</span><span class="pl-k">=</span>d,<span class="pl-smi">a</span>.<span class="pl-c1">y</span><span class="pl-k">=</span>f,<span class="pl-smi">a</span>.<span class="pl-smi">v</span><span class="pl-k">=</span>b}<span class="pl-k">else</span> <span class="pl-en">e</span>(a,b,d,f,c,k,g,q)}function e(b,d,f,c,e,k,g,q){var r=.5*(e+g),x=.5*(k+q),z=f&gt;=r,u=c&gt;=x,p=u&lt;&lt;1|z;b.h=!1;b=b.a[p]||(b.a[p]=h());z?e=r:g=r;u?k=x:q=x;a(b,d,f,c,e,k,g,q)}function c(a,b,d,f,c,e,k){var g=Infinity,q=void 0;(function z(a,p,t,n,r){if(!(p&gt;e||t&gt;k||n&lt;f||r&lt;c)){if(point=a.v){var u=b-a.x,l=d-a.y,u=u*u+l*l;u&lt;g&amp;&amp;(u=Math.sqrt(g=u),f=b-u,c=d-u,e=b+u,k=d+u,q=void 0)}for(var u=</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">a</span>,l<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(p<span class="pl-k">+</span>n),y<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">*</span>(t<span class="pl-k">+</span>r),h<span class="pl-k">=</span>(d<span class="pl-k">&gt;=</span>y)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span><span class="pl-k">|</span>b<span class="pl-k">&gt;=</span>l,x<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">4</span>;h<span class="pl-k">&lt;</span>x;<span class="pl-k">++</span>h)<span class="pl-k">if</span>(a<span class="pl-k">=</span>u[h<span class="pl-k">&amp;</span><span class="pl-c1">3</span>])<span class="pl-k">switch</span>(h<span class="pl-k">&amp;</span><span class="pl-c1">3</span>){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-en">z</span>(a,p,t,l,y);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-en">z</span>(a,l,t,n,y);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-en">z</span>(a,p,y,l,r);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-en">z</span>(a,l,y,n,r)}}})(a,f,c,e,k);<span class="pl-k">return</span> q}<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,q<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,r<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,d<span class="pl-k">=</span>f<span class="pl-k">=</span><span class="pl-k">-</span>(m<span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">Infinity</span>),k<span class="pl-k">=</span>[],q<span class="pl-k">=</span>[],w<span class="pl-k">=</span><span class="pl-smi">v</span>.<span class="pl-c1">length</span>,r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>w;<span class="pl-k">++</span>r)b<span class="pl-k">=</span>v[r],<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">&lt;</span>m<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>),<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">&lt;</span><span class="pl-c1">D</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>),<span class="pl-smi">b</span>.<span class="pl-c1">x</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>),<span class="pl-smi">b</span>.<span class="pl-c1">y</span><span class="pl-k">&gt;</span>f<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>),<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-c1">x</span>),<span class="pl-smi">q</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-c1">y</span>);b<span class="pl-k">=</span>d<span class="pl-k">-</span>m;r<span class="pl-k">=</span>f<span class="pl-k">-</span><span class="pl-c1">D</span>;b<span class="pl-k">&gt;</span>r<span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-c1">D</span><span class="pl-k">+</span>b<span class="pl-k">:</span>d<span class="pl-k">=</span>m<span class="pl-k">+</span>r;<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-en">h</span>();<span class="pl-smi">x</span>.<span class="pl-en">Gc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">g</span>(a,x,m,<span class="pl-c1">D</span>,</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">d,f)};<span class="pl-smi">x</span>.<span class="pl-en">find</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(x,a,b,m,<span class="pl-c1">D</span>,d,f)};<span class="pl-k">for</span>(r<span class="pl-k">=</span><span class="pl-c1">0</span>;r<span class="pl-k">&lt;</span>w;r<span class="pl-k">++</span>)<span class="pl-en">a</span>(x,v[r],k[r],q[r],m,<span class="pl-c1">D</span>,d,f);<span class="pl-k">--</span>r;k<span class="pl-k">=</span>q<span class="pl-k">=</span>v<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span> x}},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">Qa</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">a}<span class="pl-en">v</span>(g,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>apply<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">Qa</span>.<span class="pl-c1">length</span>;a<span class="pl-k">&lt;</span>e;a<span class="pl-k">++</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">Qa</span>[a];<span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>();<span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()}}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">}<span class="pl-en">v</span>(g,<span class="pl-c1">null</span>,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>edgeSource<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">source</span>.<span class="pl-c1">source</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">source</span>),c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">B</span>(<span class="pl-smi">a</span>.<span class="pl-c1">source</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,y<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>,index<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>,Jb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,e<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">source</span>}}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">source</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>edgeTarget<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>.<span class="pl-c1">source</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">u</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>),c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">B</span>(<span class="pl-smi">a</span>.<span class="pl-c1">target</span>);<span class="pl-k">return</span>{x<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,y<span class="pl-k">:</span>(<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span>)<span class="pl-k">/</span><span class="pl-c1">2</span>,b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>,index<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>,Jb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,e<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">target</span>}}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">target</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getCurveShift<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){e<span class="pl-k">=</span>e<span class="pl-k">||</span>{};<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> e;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">t</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">1</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">t</span>)<span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">t</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">.5</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-en">u</span>(a).<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-c1">U</span><span class="pl-k">=</span><span class="pl-c1">1.25</span><span class="pl-k">*</span>c;<span class="pl-smi">e</span>.<span class="pl-c1">V</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">u</span>(a),b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">B</span>(a);<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">x</span>;<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">y</span>}<span class="pl-k">return</span> e}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">e</span>.<span class="pl-smi">key</span>,e)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,c);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,e);<span class="pl-k">return</span> b}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">14</span>),e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">15</span>),c<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">7</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> b))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">oa</span><span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">a</span>(c),sdf<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">e</span>(c)}}<span class="pl-en">g</span>(b,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">oa</span>)<span class="pl-v">this</span>.<span class="pl-smi">oa</span>[a].<span class="pl-c1">clear</span>()}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>isSDF<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">pc</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">o</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">Pb</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getEngine<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">qc</span>(a)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">oa</span>.<span class="pl-smi">Sb</span><span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">oa</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bind<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a <span class="pl-k">in</span> <span class="pl-v">this</span>.<span class="pl-smi">oa</span>);}}]);<span class="pl-k">return</span> b}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">1024</span>;<span class="pl-v">this</span>.<span class="pl-c1">P</span><span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">K</span>;<span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">style</span>.<span class="pl-c1">width</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">style</span>.<span class="pl-c1">height</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">K</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">style</span>.<span class="pl-c1">display</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>none<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">document</span>.<span class="pl-c1">body</span>.<span class="pl-c1">appendChild</span>(<span class="pl-v">this</span>.<span class="pl-c1">P</span>);<span class="pl-v">this</span>.<span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">P</span>.<span class="pl-c1">getContext</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-smi">fillStyle</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>white<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-c1">textAlign</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>left<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-smi">textBaseline</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-smi">$</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">aa</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">o</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">createTexture</span>()}<span class="pl-en">v</span>(g,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">$</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-en">clearRect</span>(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-c1">K</span>,<span class="pl-v">this</span>.<span class="pl-c1">K</span>);<span class="pl-v">this</span>.<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">0</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>setFont<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">$</span>[a]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">aa</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">$</span>[a]<span class="pl-k">||</span>{};<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-smi">font</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-c1">Y</span>;<span class="pl-v">this</span>.<span class="pl-c1">Y</span><span class="pl-k">=</span><span class="pl-k">+</span><span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)px<span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(a)[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">1</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getTexture<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-en">b</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">o</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_getText<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">aa</span>[a];<span class="pl-k">if</span>(<span class="pl-k">!</span>e){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-en">measureText</span>(a).<span class="pl-c1">width</span>;<span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">+</span>c<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-c1">K</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">=</span><span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">+=</span><span class="pl-v">this</span>.<span class="pl-c1">Y</span>);<span class="pl-v">this</span>.<span class="pl-c1">X</span>.<span class="pl-en">fillText</span>(a,<span class="pl-v">this</span>.<span class="pl-c1">L</span>,<span class="pl-v">this</span>.<span class="pl-c1">R</span>);<span class="pl-v">this</span>.<span class="pl-smi">aa</span>[a]<span class="pl-k">=</span>e<span class="pl-k">=</span>{width<span class="pl-k">:</span>c,height<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">Y</span>,left<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">K</span>,right<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">+</span>c)<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">K</span>,top<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">K</span>,bottom<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-c1">R</span><span class="pl-k">+</span><span class="pl-v">this</span>.<span class="pl-c1">Y</span>)<span class="pl-k">/</span><span class="pl-v">this</span>.<span class="pl-c1">K</span>};<span class="pl-v">this</span>.<span class="pl-c1">L</span><span class="pl-k">+=</span>c}<span class="pl-k">return</span> e}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">Lc</span>(a);<span class="pl-k">return</span>[{xb<span class="pl-k">:</span>a,sa<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span>,ta<span class="pl-k">:</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>c<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span>}]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>steps<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">1</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bind<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-v">this</span>.<span class="pl-smi">o</span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">pixelStorei</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">UNPACK_FLIP_Y_WEBGL</span>,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">texParameteri</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_2D</span>,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_MAG_FILTER</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">NEAREST</span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">texParameteri</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_MIN_FILTER</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">NEAREST</span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">texImage2D</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">0</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">RGBA</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">RGBA</span>,<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">UNSIGNED_BYTE</span>,<span class="pl-v">this</span>.<span class="pl-c1">P</span>);<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-en">bindTexture</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>.<span class="pl-c1">TEXTURE_2D</span>,<span class="pl-c1">null</span>)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fontSize<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">Y</span>}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">$</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">aa</span>;<span class="pl-v">this</span>.<span class="pl-smi">c</span><span class="pl-k">=</span>a}<span class="pl-en">v</span>(g,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">$</span><span class="pl-k">=</span>{}}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>setFont<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">font</span>;<span class="pl-v">this</span>.<span class="pl-smi">$</span>[k]<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">aa</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">$</span>[k]<span class="pl-k">||</span>{};<span class="pl-v">this</span>.<span class="pl-smi">o</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">nc</span>(a,e,c,b);<span class="pl-v">this</span>.<span class="pl-smi">ma</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.<span class="pl-smi">hb</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">get</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Pb</span>)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getTexture<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> <span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>{};<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>){a[c]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">a</span>.<span class="pl-smi">Hc</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">Ic</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>()}}();<span class="pl-smi">e</span>.<span class="pl-c1">load</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Pb</span>,<span class="pl-k">function</span>(){<span class="pl-en">k</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SDFmetrics<span class="pl-pds">&quot;</span></span>)},<span class="pl-s"><span class="pl-pds">&quot;</span>json<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">get</span>(<span class="pl-v">this</span>.<span class="pl-smi">c</span>,<span class="pl-smi">a</span>.<span class="pl-smi">o</span>,<span class="pl-k">function</span>(){<span class="pl-en">k</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>SDFtexture<span class="pl-pds">&quot;</span></span>)},{Sb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_getChar<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">aa</span>[a],c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">hb</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span>e){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">o</span>.<span class="pl-smi">Gb</span>,b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">buffer</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">Sc</span>[a],k<span class="pl-k">=</span>c[<span class="pl-c1">0</span>]<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>b,b<span class="pl-k">=</span>c[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>b,g<span class="pl-k">=</span>c[<span class="pl-c1">5</span>],h<span class="pl-k">=</span>c[<span class="pl-c1">6</span>];<span class="pl-v">this</span>.<span class="pl-smi">aa</span>[a]<span class="pl-k">=</span>e<span class="pl-k">=</span>{wa<span class="pl-k">:</span>c[<span class="pl-c1">4</span>],Fb<span class="pl-k">:</span>c[<span class="pl-c1">2</span>],oc<span class="pl-k">:</span>c[<span class="pl-c1">3</span>],width<span class="pl-k">:</span>k,height<span class="pl-k">:</span>b,left<span class="pl-k">:</span>g<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">width</span>,right<span class="pl-k">:</span>(g<span class="pl-k">+</span>k)<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">width</span>,top<span class="pl-k">:</span>h<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span>,bottom<span class="pl-k">:</span>(h<span class="pl-k">+</span>b)<span class="pl-k">/</span><span class="pl-smi">e</span>.<span class="pl-c1">height</span>}}<span class="pl-k">return</span> e}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;g<span class="pl-k">++</span>)<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">ec</span>(a[g]),</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line">k<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(k,<span class="pl-smi">h</span>.<span class="pl-c1">height</span>),b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">wa</span><span class="pl-k">?</span>b<span class="pl-k">+</span>(<span class="pl-smi">h</span>.<span class="pl-smi">wa</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-smi">Fb</span>)<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">width</span>;e<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>e<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">-</span>b;c<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;=</span>c<span class="pl-k">?</span>k<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-k">-</span>k;k<span class="pl-k">=</span>[];<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">ec</span>(a[b]),h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,v<span class="pl-k">=</span>c;<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">wa</span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">Fb</span>,w<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">oc</span>,h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">wa</span>;c<span class="pl-k">-=</span><span class="pl-smi">g</span>.<span class="pl-c1">height</span><span class="pl-k">-</span>w;e<span class="pl-k">+=</span>m}<span class="pl-smi">k</span>.<span class="pl-c1">push</span>({xb<span class="pl-k">:</span>g,sa<span class="pl-k">:</span>e,ta<span class="pl-k">:</span>c});c<span class="pl-k">=</span>v;e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">wa</span><span class="pl-k">?</span>e<span class="pl-k">+</span>h<span class="pl-k">:</span>e<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">width</span>}<span class="pl-k">return</span> k}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>steps<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bind<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>isSDF<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fontSize<span class="pl-pds">&quot;</span></span>,<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>(<span class="pl-v">this</span>.<span class="pl-smi">hb</span><span class="pl-k">||</span>{}).<span class="pl-c1">size</span>}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(a <span class="pl-k">instanceof</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line">b))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);}function a(a){var b=Math.pow(Math.abs(a),1/3);return 0&gt;a?-b:b}function e(d,f,c,p,e,n,k,g){var l;l=4*c*c-16*c*e+8*c*k+16*e*e-16*e*k+4*k*k+4*p*p-16*p*n+8*p*g+16*n*n-16*n*g+4*g*g;var u=-12*c*c+36*c*e-12*c*k-24*e*e+12*e*k-12*p*p+36*p*n-12*p*g-24*n*n+12*n*g,t=12*c*c-24*c*e+4*c*k-4*c*d+8*e*e+8*e*d-4*k*d+12*p*p-24*p*n+4*p*g-4*p*f+8*n*n+8*n*f-4*g*f,z=-4*c*c+4*c*e+4*c*d-4*e*d-4*p*p+4*p*n+4*p*f-4*n*f;if(1E-8&gt;Math.abs(l))if(l=u,u=t,t=z,1E-8&gt;Math.abs(l))l=</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">u,l<span class="pl-k">=</span><span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(l)<span class="pl-k">?</span>[]<span class="pl-k">:</span>[<span class="pl-k">-</span>t<span class="pl-k">/</span>l];<span class="pl-k">else</span>{<span class="pl-k">var</span> h<span class="pl-k">=</span>u<span class="pl-k">*</span>u<span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">*</span>l<span class="pl-k">*</span>t;l<span class="pl-k">=</span><span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(h)<span class="pl-k">?</span>[<span class="pl-k">-</span>u<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>l)]<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>h<span class="pl-k">?</span>[(<span class="pl-k">-</span>u<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(h))<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>l),(<span class="pl-k">-</span>u<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(h))<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>l)]<span class="pl-k">:</span>[]}<span class="pl-k">else</span>{h<span class="pl-k">=</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>l<span class="pl-k">*</span>t<span class="pl-k">-</span>u<span class="pl-k">*</span>u)<span class="pl-k">/</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>l<span class="pl-k">*</span>l);z<span class="pl-k">=</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>u<span class="pl-k">*</span>u<span class="pl-k">*</span>u<span class="pl-k">-</span><span class="pl-c1">9</span><span class="pl-k">*</span>l<span class="pl-k">*</span>u<span class="pl-k">*</span>t<span class="pl-k">+</span><span class="pl-c1">27</span><span class="pl-k">*</span>l<span class="pl-k">*</span>l<span class="pl-k">*</span>z)<span class="pl-k">/</span>(<span class="pl-c1">27</span><span class="pl-k">*</span>l<span class="pl-k">*</span>l<span class="pl-k">*</span>l);<span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(h)<span class="pl-k">?</span>h<span class="pl-k">=</span>[<span class="pl-en">a</span>(<span class="pl-k">-</span>z)]<span class="pl-k">:</span><span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(z)<span class="pl-k">?</span>h<span class="pl-k">=</span>[<span class="pl-c1">0</span>].<span class="pl-c1">concat</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>h<span class="pl-k">?</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span>h),<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span>h)]<span class="pl-k">:</span>[])<span class="pl-k">:</span>(t<span class="pl-k">=</span>z<span class="pl-k">*</span>z<span class="pl-k">/</span><span class="pl-c1">4</span><span class="pl-k">+</span>h<span class="pl-k">*</span>h<span class="pl-k">*</span>h<span class="pl-k">/</span><span class="pl-c1">27</span>,<span class="pl-c1">1E-8</span><span class="pl-k">&gt;</span><span class="pl-c1">Math</span>.<span class="pl-c1">abs</span>(t)<span class="pl-k">?</span>h<span class="pl-k">=</span>[<span class="pl-k">-</span><span class="pl-c1">1.5</span><span class="pl-k">*</span>z<span class="pl-k">/</span>h,<span class="pl-c1">3</span><span class="pl-k">*</span>z<span class="pl-k">/</span>h]<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>t<span class="pl-k">?</span>(t<span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-k">-</span>z<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(t)),h<span class="pl-k">=</span>[t<span class="pl-k">-</span>h<span class="pl-k">/</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>t)])<span class="pl-k">:</span>(t<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(<span class="pl-k">-</span>h<span class="pl-k">/</span><span class="pl-c1">3</span>),h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">acos</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>z<span class="pl-k">/</span>h<span class="pl-k">/</span>t)<span class="pl-k">/</span><span class="pl-c1">3</span>,z<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">PI</span><span class="pl-k">/</span><span class="pl-c1">3</span>,h<span class="pl-k">=</span>[t<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h),t<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h<span class="pl-k">-</span>z),t<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">cos</span>(h<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">2</span><span class="pl-k">*</span>z)]));<span class="pl-k">for</span>(t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>;t<span class="pl-k">++</span>)h[t]<span class="pl-k">-=</span>u<span class="pl-k">/</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>l);l<span class="pl-k">=</span>h}u<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">l</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)t<span class="pl-k">=</span>l[h],<span class="pl-c1">0</span><span class="pl-k">&gt;</span>t<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>t<span class="pl-k">||</span>(t<span class="pl-k">=</span><span class="pl-en">b</span>(d,f,c<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>e<span class="pl-k">*</span>t<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">+</span>k<span class="pl-k">*</span>t<span class="pl-k">*</span>t,p<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>n<span class="pl-k">*</span>t<span class="pl-k">*</span>(<span class="pl-c1">1</span><span class="pl-k">-</span>t)<span class="pl-k">+</span>g<span class="pl-k">*</span>t<span class="pl-k">*</span>t),t<span class="pl-k">&lt;</span>u<span class="pl-k">&amp;&amp;</span>(u<span class="pl-k">=</span>t));<span class="pl-k">return</span> u}function c(a){for(var b=Infinity,d=-b,c=Infinity,f=-c,e=0;e&lt;a.length;e+=2){var k=a[e];k&lt;b&amp;&amp;(b=k);k&gt;d&amp;&amp;(d=k)}for(e=1;e&lt;a.length;e+=2)k=a[e],k&lt;c&amp;&amp;(c=k),k&gt;f&amp;&amp;(f=k);return[b,c,d,f]}function b(a,b,d,c){a-=d;b-=c;return a*a+b*b}function k(a,b,d,c,f,e,k,g){var p=(d-a)*(g-e)-(c-b)*(k-f);if(0==p)return!1;k=((b-e)*</td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line">(k<span class="pl-k">-</span>f)<span class="pl-k">-</span>(a<span class="pl-k">-</span>f)<span class="pl-k">*</span>(g<span class="pl-k">-</span>e))<span class="pl-k">/</span>p;a<span class="pl-k">=</span>((b<span class="pl-k">-</span>e)<span class="pl-k">*</span>(d<span class="pl-k">-</span>a)<span class="pl-k">-</span>(a<span class="pl-k">-</span>f)<span class="pl-k">*</span>(c<span class="pl-k">-</span>b))<span class="pl-k">/</span>p;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>k<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>k<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&lt;</span>a<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}function q(a,b,d,c,f,e){return a&gt;=d-I&amp;&amp;a&lt;=f+I&amp;&amp;b&gt;=c-I&amp;&amp;b&lt;=e+I}function r(a,b){return a&gt;=b-I&amp;&amp;a&lt;=b+I}function J(a,b,d,c,f,e){return 0&gt;c||1&lt;c||!r(e-f,0)&amp;&amp;(a=(a*(1-c)*(1-c)+2*b*c*(1-c)+d*c*c)/(e-f),0&gt;a||1&lt;a)?!1:!0}function m(a,b,d,c,f,e,k,g,l,h){var p,n=-a*g+a*h+2*d*g-2*d*h-f*g+f*h+b*k-b*l-2*c*k+2*c*l+e*k-e*l;if(!r(n,0)&amp;&amp;!r(k-l,0)){p=2*a*g-2*a*h-2*d*g+2*d*h-2*b*l+2*c*k-2*c*l;var t=p*p-4*(-a*g+a*h+b*k-b*l-k*h+l*g)*(-a*</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">+</span>a<span class="pl-k">*</span>h<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>h<span class="pl-k">+</span>b<span class="pl-k">*</span>k<span class="pl-k">-</span>b<span class="pl-k">*</span>l<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">+</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>l);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>t){<span class="pl-k">var</span> u<span class="pl-k">=</span>a<span class="pl-k">*</span>g<span class="pl-k">-</span>a<span class="pl-k">*</span>h<span class="pl-k">-</span>d<span class="pl-k">*</span>g<span class="pl-k">+</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>b<span class="pl-k">*</span>k<span class="pl-k">+</span>b<span class="pl-k">*</span>l<span class="pl-k">+</span>c<span class="pl-k">*</span>k<span class="pl-k">-</span>c<span class="pl-k">*</span>l;p<span class="pl-k">=</span>(u<span class="pl-k">-</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(t))<span class="pl-k">/</span>n;<span class="pl-k">if</span>(<span class="pl-en">J</span>(b,c,e,k,l,p))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;p<span class="pl-k">=</span>(u<span class="pl-k">+</span><span class="pl-c1">.5</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(t))<span class="pl-k">/</span>n;<span class="pl-k">if</span>(<span class="pl-en">J</span>(b,c,e,k,l,p))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}n<span class="pl-k">=</span><span class="pl-k">-</span>d<span class="pl-k">*</span>g<span class="pl-k">+</span>d<span class="pl-k">*</span>h<span class="pl-k">+</span>f<span class="pl-k">*</span>g<span class="pl-k">-</span>f<span class="pl-k">*</span>h<span class="pl-k">+</span>c<span class="pl-k">*</span>k<span class="pl-k">-</span>c<span class="pl-k">*</span>l<span class="pl-k">-</span>e<span class="pl-k">*</span>k<span class="pl-k">+</span>e<span class="pl-k">*</span>l;<span class="pl-k">return</span> <span class="pl-en">r</span>(b,<span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(a,<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">-</span>f)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(n,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(k<span class="pl-k">*</span>g<span class="pl-k">-</span>k<span class="pl-k">*</span>h<span class="pl-k">-</span>l<span class="pl-k">*</span>g<span class="pl-k">+</span>l<span class="pl-k">*</span>h,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(b,c,e,k,l,(<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>h<span class="pl-k">+</span>f<span class="pl-k">*</span>g<span class="pl-k">-</span>f<span class="pl-k">*</span>h<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">-</span>e<span class="pl-k">*</span>k<span class="pl-k">+</span>e<span class="pl-k">*</span>l<span class="pl-k">-</span>k<span class="pl-k">*</span>h<span class="pl-k">+</span>l<span class="pl-k">*</span>g)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>n))<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-en">r</span>(g,h)<span class="pl-k">&amp;&amp;</span><span class="pl-en">r</span>(b,<span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span>e)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(c<span class="pl-k">-</span>e,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(k<span class="pl-k">-</span>l,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(b,c,e,k,l,(<span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">-</span>e<span class="pl-k">-</span>h)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>(c<span class="pl-k">-</span>e)))<span class="pl-k">||</span><span class="pl-en">r</span>(a,(<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>h<span class="pl-k">+</span>b<span class="pl-k">*</span>k<span class="pl-k">-</span>b<span class="pl-k">*</span>l<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">+</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">*</span>l)<span class="pl-k">/</span>(g<span class="pl-k">-</span>h))<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(d<span class="pl-k">*</span>b<span class="pl-k">*</span>g<span class="pl-k">-</span>d<span class="pl-k">*</span>b<span class="pl-k">*</span>h<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>c<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>c<span class="pl-k">*</span>h<span class="pl-k">+</span>d<span class="pl-k">*</span>e<span class="pl-k">*</span>g<span class="pl-k">-</span>d<span class="pl-k">*</span>e<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>b<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>b<span class="pl-k">*</span>h<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>f<span class="pl-k">*</span>c<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>f<span class="pl-k">*</span>c<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>e<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>e<span class="pl-k">*</span>h<span class="pl-k">-</span>b<span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">+</span>b<span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">+</span>b<span class="pl-k">*</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>b<span class="pl-k">*</span>e<span class="pl-k">*</span>l<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">-</span><span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">*</span>e<span class="pl-k">*</span>k<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">*</span>e<span class="pl-k">*</span>l<span class="pl-k">+</span>e<span class="pl-k">*</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>e<span class="pl-k">*</span>l,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">r</span>(k<span class="pl-k">-</span>l,<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">J</span>(b,c,e,k,l,(<span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>g<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>h<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>k<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">*</span>c<span class="pl-k">*</span>l<span class="pl-k">+</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>l<span class="pl-k">+</span>k<span class="pl-k">*</span>h<span class="pl-k">-</span>l<span class="pl-k">*</span>g)<span class="pl-k">/</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>(d<span class="pl-k">*</span>g<span class="pl-k">-</span>d<span class="pl-k">*</span>h<span class="pl-k">-</span>f<span class="pl-k">*</span>g<span class="pl-k">+</span>f<span class="pl-k">*</span>h<span class="pl-k">-</span>c<span class="pl-k">*</span>k<span class="pl-k">+</span>c<span class="pl-k">*</span>l<span class="pl-k">+</span>e<span class="pl-k">*</span>k<span class="pl-k">-</span>e<span class="pl-k">*</span>l)))<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function D(a,b,d,c,f,k,g,h,l,x){if(q(a,b,g,h,l,x)||q(f,k,g,h,l,x))return!0;var p=g-l,n=h-x,t=p*p+n*n,u=e((g+l)/2,(h+x)/2,a,b,d,c,f,k);return 4*u&gt;t?!1:4*u&lt;=Math.min(p*p,n*n)?!0:m(a,b,d,c,f,k,h,l,h,h)||m(a,b,d,c,f,k,l,</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line">h,l,x)<span class="pl-k">||</span><span class="pl-en">m</span>(a,b,d,c,f,k,l,x,g,x)<span class="pl-k">||</span><span class="pl-en">m</span>(a,b,d,c,f,k,g,x,g,h)}function d(a,b,d,c){E[&quot;default&quot;].bb(d,c);var f;d=-c.y;f=c.x*a.D;var e=d*a.width*d*a.width+f*a.height*f*a.height;r(e,0)?f=d=0:(e=Math.sqrt(e),d*=.25*a.M*b/e,f*=.25*a.M*b/e);e=2.5*a.O*b/a.height;a=2.5*a.O*b/a.width*-c.V*.5;b=.5*c.U*e;c.x=d+a;c.y=f+b}function f(a,b){return a.N-b.N}var x=function(){function a(a,b){for(var d=0;d&lt;b.length;d++){var c=b[d];c.enumerable=c.enumerable||!1;c.configurable=!0;&quot;value&quot;in c&amp;&amp;(c.writable=!0);Object.defineProperty(a,</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">key</span>,c)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){d<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,d);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,c);<span class="pl-k">return</span> b}}(),<span class="pl-c1">A</span><span class="pl-k">=</span>(v<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">17</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">v</span>.<span class="pl-smi">Xb</span><span class="pl-k">?</span>v<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>v},<span class="pl-c1">E</span><span class="pl-k">=</span>(h<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">12</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">Xb</span><span class="pl-k">?</span>h<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>h},<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-c1">Number</span>.<span class="pl-c1">EPSILON</span><span class="pl-k">||</span><span class="pl-c1">1E-14</span>,<span class="pl-c1">B</span><span class="pl-k">=</span>{},<span class="pl-en">C</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>){<span class="pl-en">g</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">Ib</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">e</span><span class="pl-k">=</span>b}<span class="pl-en">x</span>(a,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBBox<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">-</span><span class="pl-c1">I</span>,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">-</span><span class="pl-c1">I</span>,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">x</span><span class="pl-k">+</span><span class="pl-c1">I</span>,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">+</span><span class="pl-c1">I</span>]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>intersectsRect<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-en">q</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">y</span>,a,b,d,c)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dist2<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-en">b</span>(a,d,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">x</span>,<span class="pl-v">this</span>.<span class="pl-smi">e</span>.<span class="pl-c1">y</span>)}}]);<span class="pl-k">return</span> a}(),<span class="pl-en">O</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>){<span class="pl-en">g</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">a);<span class="pl-v">this</span>.<span class="pl-smi">Ia</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">e</span><span class="pl-k">=</span>b}<span class="pl-en">x</span>(a,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getPoints<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,f,e,k,g<span class="pl-k">=</span><span class="pl-c1">E</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>].<span class="pl-en">u</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>),h<span class="pl-k">=</span><span class="pl-c1">E</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>].<span class="pl-en">B</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>);c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">x</span>;f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">y</span>;e<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>;k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span>;<span class="pl-en">d</span>(a,b,<span class="pl-smi">g</span>.<span class="pl-smi">e</span>,<span class="pl-c1">B</span>);c<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">x</span>;f<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">y</span>;<span class="pl-en">d</span>(a,b,<span class="pl-smi">h</span>.<span class="pl-smi">e</span>,<span class="pl-c1">B</span>);e<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">x</span>;k<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span>[c,f,e,k]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBBox<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">Eb</span>(a,b);<span class="pl-k">return</span>[<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">2</span>]),<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d[<span class="pl-c1">1</span>],d[<span class="pl-c1">3</span>]),<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">2</span>]),<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d[<span class="pl-c1">1</span>],d[<span class="pl-c1">3</span>])]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>intersectsRect<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">Eb</span>(f,e);f<span class="pl-k">=</span>g[<span class="pl-c1">0</span>];e<span class="pl-k">=</span>g[<span class="pl-c1">1</span>];<span class="pl-k">var</span> h<span class="pl-k">=</span>g[<span class="pl-c1">2</span>],g<span class="pl-k">=</span>g[<span class="pl-c1">3</span>];<span class="pl-k">return</span> <span class="pl-en">q</span>(f,e,a,b,d,c)<span class="pl-k">||</span><span class="pl-en">q</span>(h,g,a,b,</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line">d,c)<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-en">k</span>(f,e,h,g,a,b,d,b)<span class="pl-k">||</span><span class="pl-en">k</span>(f,e,h,g,d,b,d,c)<span class="pl-k">||</span><span class="pl-en">k</span>(f,e,h,g,d,c,a,c)<span class="pl-k">||</span><span class="pl-en">k</span>(f,e,h,g,a,c,a,b)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dist2<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">Eb</span>(c,f);f<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];c<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-k">var</span> k<span class="pl-k">=</span>e[<span class="pl-c1">2</span>],e<span class="pl-k">=</span>e[<span class="pl-c1">3</span>],g<span class="pl-k">=</span>k<span class="pl-k">-</span>f,h<span class="pl-k">=</span>e<span class="pl-k">-</span>c,p<span class="pl-k">=</span>g<span class="pl-k">*</span>g<span class="pl-k">+</span>h<span class="pl-k">*</span>h,t<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">!=</span>p<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span>((a<span class="pl-k">-</span>f)<span class="pl-k">*</span>g<span class="pl-k">+</span>(d<span class="pl-k">-</span>c)<span class="pl-k">*</span>h)<span class="pl-k">/</span>p);<span class="pl-c1">0</span><span class="pl-k">&gt;</span>t<span class="pl-k">||</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>t<span class="pl-k">?</span>(f<span class="pl-k">=</span>k,c<span class="pl-k">=</span>e)<span class="pl-k">:</span>(f<span class="pl-k">+=</span>t<span class="pl-k">*</span>g,c<span class="pl-k">+=</span>t<span class="pl-k">*</span>h));<span class="pl-k">return</span> <span class="pl-en">b</span>(a,d,f,c)}}]);<span class="pl-k">return</span> a}(),<span class="pl-en">P</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>){<span class="pl-en">g</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">Ia</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">e</span><span class="pl-k">=</span>b}<span class="pl-en">x</span>(a,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBezierPoints<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,f,e;e<span class="pl-k">=</span><span class="pl-c1">E</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>].<span class="pl-en">u</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>);c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">x</span>;f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span>;<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">2.5</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">O</span><span class="pl-k">*</span>b,g<span class="pl-k">=</span>k<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">/</span><span class="pl-c1">2</span>,k<span class="pl-k">=</span>k<span class="pl-k">/</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">/</span><span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-c1">.5</span><span class="pl-k">&gt;</span><span class="pl-smi">e</span>.<span class="pl-c1">y</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-en">d</span>(a,b,<span class="pl-smi">e</span>.<span class="pl-smi">e</span>,<span class="pl-c1">B</span>);c<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">x</span>;f<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span>[c,f,c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">*</span>g,f<span class="pl-k">+</span>k<span class="pl-k">*</span>h,c,f<span class="pl-k">+</span><span class="pl-c1">1.25</span><span class="pl-k">*</span>k<span class="pl-k">*</span>h,c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">*</span>g,f<span class="pl-k">+</span>k<span class="pl-k">*</span>h]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBBox<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(a,b);<span class="pl-k">return</span> <span class="pl-en">c</span>(d)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>intersectsRect<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>){f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(f,e);<span class="pl-k">return</span> <span class="pl-en">D</span>(f[<span class="pl-c1">0</span>],f[<span class="pl-c1">1</span>],f[<span class="pl-c1">2</span>],f[<span class="pl-c1">3</span>],f[<span class="pl-c1">4</span>],f[<span class="pl-c1">5</span>],a,b,d,c)<span class="pl-k">||</span><span class="pl-en">D</span>(f[<span class="pl-c1">2</span>],f[<span class="pl-c1">3</span>],f[<span class="pl-c1">4</span>],f[<span class="pl-c1">5</span>],f[<span class="pl-c1">6</span>],f[<span class="pl-c1">7</span>],a,b,d,c)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dist2<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(d,c);d<span class="pl-k">=</span><span class="pl-en">e</span>(a,b,c[<span class="pl-c1">0</span>],c[<span class="pl-c1">1</span>],c[<span class="pl-c1">2</span>],c[<span class="pl-c1">3</span>],c[<span class="pl-c1">4</span>],c[<span class="pl-c1">5</span>]);a<span class="pl-k">=</span><span class="pl-en">e</span>(a,b,c[<span class="pl-c1">2</span>],c[<span class="pl-c1">3</span>],c[<span class="pl-c1">4</span>],c[<span class="pl-c1">5</span>],c[<span class="pl-c1">6</span>],c[<span class="pl-c1">7</span>]);<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(d,a)}}]);<span class="pl-k">return</span> a}(),<span class="pl-en">Q</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>){<span class="pl-en">g</span>(<span class="pl-v">this</span>,</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">a);<span class="pl-v">this</span>.<span class="pl-smi">Ia</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.<span class="pl-smi">e</span><span class="pl-k">=</span>b}<span class="pl-en">x</span>(a,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBezierPoints<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f,e,k,g,h<span class="pl-k">=</span><span class="pl-c1">E</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>].<span class="pl-en">u</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>),p<span class="pl-k">=</span><span class="pl-c1">E</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>].<span class="pl-en">B</span>(<span class="pl-v">this</span>.<span class="pl-smi">e</span>);f<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">x</span>;k<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">y</span>;e<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">x</span>;g<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">y</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-en">c</span>(h,p);c<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">y</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">D</span><span class="pl-k">*-</span><span class="pl-smi">q</span>.<span class="pl-c1">x</span>,x<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">width</span><span class="pl-k">*</span>c,u<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">*</span>q,x<span class="pl-k">=</span><span class="pl-c1">2</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(x<span class="pl-k">*</span>x<span class="pl-k">+</span>u<span class="pl-k">*</span>u);c<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">*</span>b<span class="pl-k">/</span>x;q<span class="pl-k">*=</span><span class="pl-smi">a</span>.<span class="pl-c1">M</span><span class="pl-k">*</span>b<span class="pl-k">/</span>x;<span class="pl-en">d</span>(a,b,<span class="pl-smi">h</span>.<span class="pl-smi">e</span>,<span class="pl-c1">B</span>);f<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">x</span>;k<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">y</span>;<span class="pl-en">d</span>(a,b,<span class="pl-smi">p</span>.<span class="pl-smi">e</span>,<span class="pl-c1">B</span>);e<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">x</span>;g<span class="pl-k">+=</span><span class="pl-c1">B</span>.<span class="pl-c1">y</span>;<span class="pl-k">return</span>[f,k,(f<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>c,(k<span class="pl-k">+</span>g)<span class="pl-k">/</span><span class="pl-c1">2</span><span class="pl-k">+</span>q,e,g]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>intersectsRect<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>,<span class="pl-smi">k</span>){f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(f,e,k);<span class="pl-k">return</span> <span class="pl-en">D</span>(f[<span class="pl-c1">0</span>],f[<span class="pl-c1">1</span>],f[<span class="pl-c1">2</span>],f[<span class="pl-c1">3</span>],f[<span class="pl-c1">4</span>],f[<span class="pl-c1">5</span>],a,b,d,c)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>getBBox<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(a,b,d);<span class="pl-k">return</span> <span class="pl-en">c</span>(a)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dist2<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">va</span>(d,c,f);<span class="pl-k">return</span> <span class="pl-en">e</span>(a,b,d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>],d[<span class="pl-c1">2</span>],d[<span class="pl-c1">3</span>],d[<span class="pl-c1">4</span>],d[<span class="pl-c1">5</span>])}}]);<span class="pl-k">return</span> a}(),<span class="pl-c1">R</span><span class="pl-k">=</span>{a<span class="pl-k">:</span><span class="pl-c1">C</span>,Ja<span class="pl-k">:</span><span class="pl-c1">O</span>,Fa<span class="pl-k">:</span><span class="pl-c1">P</span>,Ga<span class="pl-k">:</span><span class="pl-c1">Q</span>};<span class="pl-smi">w</span>.<span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>,<span class="pl-smi">k</span>){<span class="pl-en">g</span>(<span class="pl-v">this</span>,a);<span class="pl-v">this</span>.<span class="pl-smi">normalize</span><span class="pl-k">=</span>k;<span class="pl-v">this</span>.<span class="pl-smi">ya</span><span class="pl-k">=</span>(<span class="pl-c1">0</span>,<span class="pl-c1">A</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>default<span class="pl-pds">&quot;</span></span>])();<span class="pl-v">this</span>.<span class="pl-smi">types</span><span class="pl-k">=</span>{a<span class="pl-k">:</span>[],Ja<span class="pl-k">:</span>[],Fa<span class="pl-k">:</span>[],Ga<span class="pl-k">:</span>[]};<span class="pl-k">var</span> h,l<span class="pl-k">=</span>[];<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">C</span>(d[h]);l[h]<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">Ha</span>(b,<span class="pl-c1">1</span>);<span class="pl-v">this</span>.<span class="pl-smi">types</span>.<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(q);l[h].<span class="pl-c1">push</span>(q)}<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>,d<span class="pl-k">++</span>)q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">O</span>(c[d]),l[h]<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">Ha</span>(b,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">types</span>.<span class="pl-smi">Ja</span>.<span class="pl-c1">push</span>(q),</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">l[h].<span class="pl-c1">push</span>(q);<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">+=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>,d<span class="pl-k">++</span>)c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">P</span>(e[d]),l[h]<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">Ha</span>(b,<span class="pl-c1">1</span>),<span class="pl-v">this</span>.<span class="pl-smi">types</span>.<span class="pl-smi">Fa</span>.<span class="pl-c1">push</span>(c),l[h].<span class="pl-c1">push</span>(c);<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">+=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>,d<span class="pl-k">++</span>)e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Q</span>(f[d]),l[h]<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">Ha</span>(b,<span class="pl-c1">1</span>,k),<span class="pl-v">this</span>.<span class="pl-smi">types</span>.<span class="pl-smi">Ga</span>.<span class="pl-c1">push</span>(e),l[h].<span class="pl-c1">push</span>(e);<span class="pl-v">this</span>.<span class="pl-smi">ya</span>.<span class="pl-c1">load</span>(l)}<span class="pl-en">x</span>(a,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>findArea<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">k</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">if</span>(b<span class="pl-k">&gt;</span>c){<span class="pl-k">var</span> l<span class="pl-k">=</span>b;b<span class="pl-k">=</span>c;c<span class="pl-k">=</span>l}d<span class="pl-k">&gt;</span>e<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span>d,d<span class="pl-k">=</span>e,e<span class="pl-k">=</span>l);l<span class="pl-k">=</span>{};h<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">=</span>[]);g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>[]);<span class="pl-smi">l</span>.<span class="pl-smi">a</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(f);<span class="pl-smi">l</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">i</span>.<span class="pl-c1">sort</span>(f);<span class="pl-k">for</span>(<span class="pl-k">var</span> q<span class="pl-k">=</span>(b<span class="pl-k">+</span>c)<span class="pl-k">/</span><span class="pl-c1">2</span>,p<span class="pl-k">=</span>(d<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span>,x<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">ya</span>.<span class="pl-c1">search</span>([b<span class="pl-k">-</span><span class="pl-c1">I</span>,d<span class="pl-k">-</span><span class="pl-c1">I</span>,c<span class="pl-k">+</span><span class="pl-c1">I</span>,e<span class="pl-k">+</span><span class="pl-c1">I</span>]),n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">x</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>x[n][<span class="pl-c1">4</span>],</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">N</span>(q,p,a,k,<span class="pl-v">this</span>.<span class="pl-smi">normalize</span>);<span class="pl-smi">r</span>.<span class="pl-en">Zc</span>(b,d,c,e,a,k,<span class="pl-v">this</span>.<span class="pl-smi">normalize</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">r</span>.<span class="pl-smi">Ib</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">a</span>.<span class="pl-c1">push</span>({node<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">e</span>,Ya<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m),<span class="pl-c1">N</span><span class="pl-k">:</span>m}),<span class="pl-smi">r</span>.<span class="pl-smi">Ia</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">i</span>.<span class="pl-c1">push</span>({$a<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">e</span>,Ya<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(m),<span class="pl-c1">N</span><span class="pl-k">:</span>m}))}<span class="pl-k">return</span> l}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>find<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">k</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>{};g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">i</span><span class="pl-k">=</span>[]);k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">h</span>.<span class="pl-smi">a</span><span class="pl-k">=</span>[]);<span class="pl-k">var</span> q<span class="pl-k">=</span>c<span class="pl-k">*</span>c;c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">ya</span>.<span class="pl-c1">search</span>([b<span class="pl-k">-</span>c,d<span class="pl-k">-</span>c,b<span class="pl-k">+</span>c,d<span class="pl-k">+</span>c]);<span class="pl-k">for</span>(<span class="pl-k">var</span> x<span class="pl-k">=</span><span class="pl-c1">0</span>;x<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;x<span class="pl-k">++</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>c[x][<span class="pl-c1">4</span>],p<span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-en">N</span>(b,d,a,e,<span class="pl-v">this</span>.<span class="pl-smi">normalize</span>);p<span class="pl-k">&gt;</span>q<span class="pl-k">||</span>(<span class="pl-smi">n</span>.<span class="pl-smi">Ib</span><span class="pl-k">&amp;&amp;</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">a</span>.<span class="pl-c1">push</span>({node<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-smi">e</span>,Ya<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(p),<span class="pl-c1">N</span><span class="pl-k">:</span>p}),<span class="pl-smi">n</span>.<span class="pl-smi">Ia</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>.<span class="pl-c1">push</span>({$a<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-smi">e</span>,Ya<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(p),<span class="pl-c1">N</span><span class="pl-k">:</span>p}))}<span class="pl-smi">h</span>.<span class="pl-smi">a</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">a</span>.<span class="pl-c1">sort</span>(f);<span class="pl-smi">h</span>.<span class="pl-smi">i</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">i</span>.<span class="pl-c1">sort</span>(f);</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> h}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>update<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">c</span>){<span class="pl-v">this</span>.<span class="pl-smi">ya</span>.<span class="pl-c1">remove</span>(<span class="pl-v">this</span>.<span class="pl-smi">types</span>[b][d]);c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">R</span>[b](c);a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">Ha</span>(a,<span class="pl-c1">1</span>,<span class="pl-v">this</span>.<span class="pl-smi">normalize</span>);<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(c);<span class="pl-v">this</span>.<span class="pl-smi">ya</span>.<span class="pl-en">Hb</span>(<span class="pl-v">this</span>.<span class="pl-smi">types</span>[b][d]<span class="pl-k">=</span>a)}}]);<span class="pl-k">return</span> a}()},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">function</span> <span class="pl-en">v</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> v))<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">v</span>(a,b);<span class="pl-v">this</span>.<span class="pl-smi">Pa</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">4</span>,a<span class="pl-k">||</span><span class="pl-c1">9</span>);<span class="pl-v">this</span>.<span class="pl-smi">qb</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">2</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">.4</span><span class="pl-k">*</span><span class="pl-v">this</span>.<span class="pl-smi">Pa</span>));b<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">fc</span>(b);<span class="pl-v">this</span>.<span class="pl-c1">clear</span>()}function h(a,b){a.j=g(a,0,a.children.length,b)}function g(b,c,e,k){for(var d=[Infinity,Infinity,-Infinity,-Infinity],f;c&lt;e;c++)f=b.children[c],a(d,b.h?k(f):</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-smi">j</span>);<span class="pl-k">return</span> d}function a(a,b){a[0]=Math.min(a[0],b[0]);a[1]=Math.min(a[1],b[1]);a[2]=Math.max(a[2],b[2]);a[3]=Math.max(a[3],b[3])}function e(a,b){return a.j[0]-b.j[0]}function c(a,b){return a.j[1]-b.j[1]}function b(a){return(a[2]-a[0])*(a[3]-a[1])}function k(a){return a[2]-a[0]+(a[3]-a[1])}function q(a,b){return a[0]&lt;=b[0]&amp;&amp;a[1]&lt;=b[1]&amp;&amp;b[2]&lt;=a[2]&amp;&amp;b[3]&lt;=a[3]}function r(a,b){return b[0]&lt;=a[2]&amp;&amp;b[1]&lt;=a[3]&amp;&amp;b[2]&gt;=a[0]&amp;&amp;b[3]&gt;=a[1]}function J(a,b,c,e,k){for(var d=[b,c],f;d.length;)c=d.pop(),b=d.pop(),</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">-</span>b<span class="pl-k">&lt;=</span>e<span class="pl-k">||</span>(f<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((c<span class="pl-k">-</span>b)<span class="pl-k">/</span>e<span class="pl-k">/</span><span class="pl-c1">2</span>)<span class="pl-k">*</span>e,<span class="pl-en">m</span>(a,b,c,f,k),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b,f,f,c))}function m(a,b,c,e,k){for(var d,f,g,h,q;c&gt;b;){600&lt;c-b&amp;&amp;(d=c-b+1,f=e-b+1,g=Math.log(d),h=.5*Math.exp(2*g/3),q=.5*Math.sqrt(g*h*(d-h)/d)*(0&gt;f-d/2?-1:1),g=Math.max(b,Math.floor(e-f*h/d+q)),f=Math.min(c,Math.floor(e+(d-f)*h/d+q)),m(a,g,f,e,k));d=a[e];f=b;h=c;D(a,b,e);for(0&lt;k(a[c],d)&amp;&amp;D(a,b,c);f&lt;h;){D(a,f,h);f++;for(h--;0&gt;k(a[f],d);)f++;for(;0&lt;k(a[h],d);)h--}0===k(a[b],d)?D(a,b,h):(h++,D(a,h,c));h&lt;=e&amp;&amp;(b=h+1);e&lt;=h&amp;&amp;(c=h-1)}}function D(a,</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-k">var</span> d<span class="pl-k">=</span>a[b];a[b]<span class="pl-k">=</span>a[c];a[c]<span class="pl-k">=</span>d}<span class="pl-smi">v</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">all</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-en">ib</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,[])},<span class="pl-en">search</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>,c<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">A</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">r</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">j</span>))<span class="pl-k">return</span> c;<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>[],k,g,h,m;b;){k<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>g;k<span class="pl-k">++</span>)h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>[k],m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-en">d</span>(h)<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">j</span>,<span class="pl-en">r</span>(a,m)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(h)<span class="pl-k">:</span><span class="pl-en">q</span>(a,m)<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">ib</span>(h,c)<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">push</span>(h));b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">pop</span>()}<span class="pl-k">return</span> c},<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.<span class="pl-smi">qb</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.<span class="pl-en">Hb</span>(a[b]);<span class="pl-k">return</span> <span class="pl-v">this</span>}a<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">kb</span>(<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(),<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>);<span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">height</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-en">sb</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,a)<span class="pl-k">:</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">height</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>a,a<span class="pl-k">=</span>b),<span class="pl-v">this</span>.<span class="pl-en">pb</span>(a,<span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">Hb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">pb</span>(a,<span class="pl-v">this</span>.<span class="pl-c1">data</span>.<span class="pl-c1">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">clear</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>{children<span class="pl-k">:</span>[],height<span class="pl-k">:</span><span class="pl-c1">1</span>,j<span class="pl-k">:</span>[<span class="pl-c1">Infinity</span>,<span class="pl-c1">Infinity</span>,<span class="pl-k">-</span><span class="pl-c1">Infinity</span>,<span class="pl-k">-</span><span class="pl-c1">Infinity</span>],h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span> <span class="pl-v">this</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">data</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">A</span>(a),d<span class="pl-k">=</span>[],e<span class="pl-k">=</span>[],k,g,h,m;b<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;){b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">pop</span>(),g<span class="pl-k">=</span>d[<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>],k<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">pop</span>(),m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line">(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">indexOf</span>(a),<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!==</span>h)){<span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">splice</span>(h,<span class="pl-c1">1</span>);<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b);<span class="pl-v">this</span>.<span class="pl-en">bc</span>(d);<span class="pl-k">break</span>}m<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">||!</span><span class="pl-en">q</span>(<span class="pl-smi">b</span>.<span class="pl-smi">j</span>,c)<span class="pl-k">?</span>g<span class="pl-k">?</span>(k<span class="pl-k">++</span>,b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">children</span>[k],m<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span>(<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(b),<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(k),k<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span>b,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>])}<span class="pl-k">return</span> <span class="pl-v">this</span>},<span class="pl-en">A</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a},<span class="pl-en">Va</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]<span class="pl-k">-</span>b[<span class="pl-c1">0</span>]},<span class="pl-en">Wa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a[<span class="pl-c1">1</span>]<span class="pl-k">-</span>b[<span class="pl-c1">1</span>]},<span class="pl-en">toJSON</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-c1">data</span>},<span class="pl-en">ib</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>[];a;)<span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">children</span>)<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">push</span>.<span class="pl-c1">apply</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">children</span>),a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">pop</span>();<span class="pl-k">return</span> b},<span class="pl-en">kb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>c<span class="pl-k">-</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">Pa</span>,k;<span class="pl-k">if</span>(d<span class="pl-k">&lt;=</span>f)<span class="pl-k">return</span> k<span class="pl-k">=</span>{children<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(b,</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">+</span><span class="pl-c1">1</span>),height<span class="pl-k">:</span><span class="pl-c1">1</span>,j<span class="pl-k">:</span><span class="pl-c1">null</span>,h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">h</span>(k,<span class="pl-v">this</span>.<span class="pl-c1">A</span>),k;e<span class="pl-k">||</span>(e<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(d)<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">log</span>(f)),f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(d<span class="pl-k">/</span><span class="pl-c1">Math</span>.<span class="pl-c1">pow</span>(f,e<span class="pl-k">-</span><span class="pl-c1">1</span>)));k<span class="pl-k">=</span>{children<span class="pl-k">:</span>[],height<span class="pl-k">:</span>e,j<span class="pl-k">:</span><span class="pl-c1">null</span>,h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(d<span class="pl-k">/</span>f),f<span class="pl-k">=</span>d<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">sqrt</span>(f)),g,q,m;<span class="pl-k">for</span>(<span class="pl-en">J</span>(a,b,c,f,<span class="pl-v">this</span>.<span class="pl-smi">Va</span>);b<span class="pl-k">&lt;=</span>c;b<span class="pl-k">+=</span>f)<span class="pl-k">for</span>(q<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b<span class="pl-k">+</span>f<span class="pl-k">-</span><span class="pl-c1">1</span>,c),<span class="pl-en">J</span>(a,b,q,d,<span class="pl-v">this</span>.<span class="pl-smi">Wa</span>),g<span class="pl-k">=</span>b;g<span class="pl-k">&lt;=</span>q;g<span class="pl-k">+=</span>d)m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(g<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>,q),<span class="pl-smi">k</span>.<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-en">kb</span>(a,g,m,e<span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-en">h</span>(k,<span class="pl-v">this</span>.<span class="pl-c1">A</span>);<span class="pl-k">return</span> k},<span class="pl-en">ac</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">k</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d,f,g,h,q,m,r,x;;){<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">h</span><span class="pl-k">||</span><span class="pl-smi">k</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>e)<span class="pl-k">break</span>;r<span class="pl-k">=</span>x<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;d<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line">f;d<span class="pl-k">++</span>)g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>[d],q<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">g</span>.<span class="pl-smi">j</span>),m<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">j</span>,m<span class="pl-k">=</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(m[<span class="pl-c1">2</span>],a[<span class="pl-c1">2</span>])<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(m[<span class="pl-c1">0</span>],a[<span class="pl-c1">0</span>]))<span class="pl-k">*</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(m[<span class="pl-c1">3</span>],a[<span class="pl-c1">3</span>])<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(m[<span class="pl-c1">1</span>],a[<span class="pl-c1">1</span>]))<span class="pl-k">-</span>q,m<span class="pl-k">&lt;</span>x<span class="pl-k">?</span>(x<span class="pl-k">=</span>m,r<span class="pl-k">=</span>q<span class="pl-k">&lt;</span>r<span class="pl-k">?</span>q<span class="pl-k">:</span>r,h<span class="pl-k">=</span>g)<span class="pl-k">:</span>m<span class="pl-k">===</span>x<span class="pl-k">&amp;&amp;</span>q<span class="pl-k">&lt;</span>r<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span>q,h<span class="pl-k">=</span>g);c<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>]}<span class="pl-k">return</span> c},<span class="pl-en">pb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">A</span>;e<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">j</span><span class="pl-k">:</span><span class="pl-en">d</span>(b);<span class="pl-k">var</span> d<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">ac</span>(e,<span class="pl-v">this</span>.<span class="pl-c1">data</span>,c,d);<span class="pl-smi">f</span>.<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(b);<span class="pl-k">for</span>(<span class="pl-en">a</span>(<span class="pl-smi">f</span>.<span class="pl-smi">j</span>,e);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c;)<span class="pl-k">if</span>(d[c].<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-smi">Pa</span>)<span class="pl-v">this</span>.<span class="pl-en">hc</span>(d,c),c<span class="pl-k">--</span>;<span class="pl-k">else</span> <span class="pl-k">break</span>;<span class="pl-v">this</span>.<span class="pl-en">Yb</span>(e,d,c)},<span class="pl-en">hc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b],d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">qb</span>;<span class="pl-v">this</span>.<span class="pl-en">Zb</span>(c,f,d);d<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">$b</span>(c,f,d);d<span class="pl-k">=</span>{children<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">splice</span>(d,</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>d),height<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">height</span>,j<span class="pl-k">:</span><span class="pl-c1">null</span>,h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-smi">c</span>.<span class="pl-smi">h</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">h</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-en">h</span>(c,<span class="pl-v">this</span>.<span class="pl-c1">A</span>);<span class="pl-en">h</span>(d,<span class="pl-v">this</span>.<span class="pl-c1">A</span>);b<span class="pl-k">?</span>a[b<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(d)<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-en">sb</span>(c,d)},<span class="pl-en">sb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-v">this</span>.<span class="pl-c1">data</span><span class="pl-k">=</span>{children<span class="pl-k">:</span>[a,b],height<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-c1">1</span>,j<span class="pl-k">:</span><span class="pl-c1">null</span>,h<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-en">h</span>(<span class="pl-v">this</span>.<span class="pl-c1">data</span>,<span class="pl-v">this</span>.<span class="pl-c1">A</span>)},$<span class="pl-en">b</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> d,f,k,h,q,m,r;q<span class="pl-k">=</span>m<span class="pl-k">=</span><span class="pl-c1">Infinity</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span>c;d<span class="pl-k">&lt;=</span>e<span class="pl-k">-</span>c;d<span class="pl-k">++</span>)f<span class="pl-k">=</span><span class="pl-en">g</span>(a,<span class="pl-c1">0</span>,d,<span class="pl-v">this</span>.<span class="pl-c1">A</span>),k<span class="pl-k">=</span><span class="pl-en">g</span>(a,d,e,<span class="pl-v">this</span>.<span class="pl-c1">A</span>),h<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(f[<span class="pl-c1">2</span>],k[<span class="pl-c1">2</span>])<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(f[<span class="pl-c1">0</span>],k[<span class="pl-c1">0</span>]))<span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(f[<span class="pl-c1">3</span>],k[<span class="pl-c1">3</span>])<span class="pl-k">-</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(f[<span class="pl-c1">1</span>],k[<span class="pl-c1">1</span>])),f<span class="pl-k">=</span><span class="pl-en">b</span>(f)<span class="pl-k">+</span><span class="pl-en">b</span>(k),h<span class="pl-k">&lt;</span>q<span class="pl-k">?</span>(q<span class="pl-k">=</span>h,r<span class="pl-k">=</span>d,m<span class="pl-k">=</span>f<span class="pl-k">&lt;</span>m<span class="pl-k">?</span>f<span class="pl-k">:</span>m)<span class="pl-k">:</span>h<span class="pl-k">===</span>q<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">&lt;</span>m<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span>f,r<span class="pl-k">=</span>d);<span class="pl-k">return</span> r},</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Zb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">k</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">Va</span><span class="pl-k">:</span>e,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-smi">Wa</span><span class="pl-k">:</span>c,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">jb</span>(a,b,k,d);b<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-en">jb</span>(a,b,k,f);g<span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">children</span>.<span class="pl-c1">sort</span>(d)},<span class="pl-en">jb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>,<span class="pl-smi">h</span>){<span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">sort</span>(h);h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">A</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">g</span>(b,<span class="pl-c1">0</span>,c,h),f<span class="pl-k">=</span><span class="pl-en">g</span>(b,e<span class="pl-k">-</span>c,e,h),q<span class="pl-k">=</span><span class="pl-en">k</span>(d)<span class="pl-k">+</span><span class="pl-en">k</span>(f),m,r;<span class="pl-k">for</span>(m<span class="pl-k">=</span>c;m<span class="pl-k">&lt;</span>e<span class="pl-k">-</span>c;m<span class="pl-k">++</span>)r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>[m],<span class="pl-en">a</span>(d,<span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-en">h</span>(r)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">j</span>),q<span class="pl-k">+=</span><span class="pl-en">k</span>(d);<span class="pl-k">for</span>(m<span class="pl-k">=</span>e<span class="pl-k">-</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>;m<span class="pl-k">&gt;=</span>c;m<span class="pl-k">--</span>)r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>[m],<span class="pl-en">a</span>(f,<span class="pl-smi">b</span>.<span class="pl-smi">h</span><span class="pl-k">?</span><span class="pl-en">h</span>(r)<span class="pl-k">:</span><span class="pl-smi">r</span>.<span class="pl-smi">j</span>),q<span class="pl-k">+=</span><span class="pl-en">k</span>(f);<span class="pl-k">return</span> q},<span class="pl-en">Yb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e;e<span class="pl-k">--</span>)<span class="pl-en">a</span>(c[e].<span class="pl-smi">j</span>,b)},<span class="pl-en">bc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,c;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b;b<span class="pl-k">--</span>)<span class="pl-c1">0</span><span class="pl-k">===</span>a[b].<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>b<span class="pl-k">?</span>(c<span class="pl-k">=</span>a[b<span class="pl-k">-</span><span class="pl-c1">1</span>].<span class="pl-smi">children</span>,<span class="pl-smi">c</span>.<span class="pl-c1">splice</span>(<span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(a[b]),</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>))<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-c1">clear</span>()<span class="pl-k">:</span><span class="pl-en">h</span>(a[b],<span class="pl-v">this</span>.<span class="pl-c1">A</span>)},<span class="pl-en">fc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>return a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span> - b<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>];<span class="pl-v">this</span>.<span class="pl-smi">Va</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">join</span>(a[<span class="pl-c1">0</span>]));<span class="pl-v">this</span>.<span class="pl-smi">Wa</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>b<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">join</span>(a[<span class="pl-c1">1</span>]));<span class="pl-v">this</span>.<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>return [a<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, a<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>];<span class="pl-pds">&quot;</span></span>)}};<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;b<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>c[b];<span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">e</span>.<span class="pl-smi">key</span>,e)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){c<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>,c);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(b,e);<span class="pl-k">return</span> b}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">7</span>),</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> c))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">na</span><span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">Bb</span>(e,<span class="pl-c1">5</span>)];<span class="pl-v">this</span>.<span class="pl-smi">tb</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-c1">J</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">pa</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-en">g</span>(c,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">J</span>[c],q<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">tb</span>[c];k<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-c1">push</span>(g)<span class="pl-k">:</span>q<span class="pl-k">?</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>()<span class="pl-k">:</span>(k<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">J</span>[c]<span class="pl-k">=</span>[g],<span class="pl-v">this</span>.<span class="pl-smi">pa</span><span class="pl-k">++</span>,<span class="pl-v">this</span>.<span class="pl-smi">tb</span>[c]<span class="pl-k">=</span>q<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">createTexture</span>(a,c,<span class="pl-k">function</span>(){<span class="pl-smi">k</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>()});<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-c1">J</span>[c];<span class="pl-k">--</span><span class="pl-smi">b</span>.<span class="pl-smi">pa</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">na</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">a</span>()})},h));<span class="pl-k">return</span> q}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>onLoad<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-en">ic</span>()<span class="pl-k">?</span><span class="pl-en">a</span>()<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">na</span>.<span class="pl-c1">push</span>(a)}},</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line">{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>allLoaded<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">lc</span>(<span class="pl-v">this</span>.<span class="pl-c1">J</span>)}}]);<span class="pl-k">return</span> c}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">e</span>.<span class="pl-smi">key</span>,e)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>,b);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(c,e);<span class="pl-k">return</span> c}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">7</span>);<span class="pl-en">h</span>(<span class="pl-c1">4</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> e))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">na</span><span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">Bb</span>(b<span class="pl-k">||</span><span class="pl-k">function</span>(){},<span class="pl-c1">5</span>)];<span class="pl-v">this</span>.<span class="pl-smi">ma</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">{};<span class="pl-v">this</span>.<span class="pl-c1">J</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">pa</span><span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-en">g</span>(e,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_transformFile<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>json<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-c1">JSON</span>.<span class="pl-c1">parse</span>(a)<span class="pl-k">:</span>a}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>get<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">ma</span>[a]}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>load<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-v">this</span>,g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">J</span>[c],h<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-smi">ma</span>[c];g<span class="pl-k">?</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(b)<span class="pl-k">:</span>h<span class="pl-k">?</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>()<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">J</span>[c]<span class="pl-k">=</span>[b],<span class="pl-v">this</span>.<span class="pl-smi">pa</span><span class="pl-k">++</span>,<span class="pl-smi">a</span>.<span class="pl-en">Nc</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">k</span>.<span class="pl-smi">ma</span>[c]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">Mc</span>(a,e);<span class="pl-smi">g</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">k</span>.<span class="pl-smi">ma</span>[c])});<span class="pl-k">delete</span> <span class="pl-smi">k</span>.<span class="pl-c1">J</span>[c];<span class="pl-k">--</span><span class="pl-smi">k</span>.<span class="pl-smi">pa</span><span class="pl-k">||</span><span class="pl-smi">k</span>.<span class="pl-smi">na</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">a</span>()})}));<span class="pl-k">return</span> h}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>onLoad<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-en">ic</span>()<span class="pl-k">?</span><span class="pl-en">a</span>()<span class="pl-k">:</span><span class="pl-v">this</span>.<span class="pl-smi">na</span>.<span class="pl-c1">push</span>(a)}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>allLoaded<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">lc</span>(<span class="pl-v">this</span>.<span class="pl-c1">J</span>)}}]);<span class="pl-k">return</span> e}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v},<span class="pl-k">function</span>(<span class="pl-smi">w</span>){<span class="pl-k">var</span> <span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>e[c];<span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">key</span>,b)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){e<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>,e);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">g</span>(a,c);<span class="pl-k">return</span> a}}(),<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">g</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> g))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-smi">Oa</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-en">v</span>(g,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>debounce<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>,k<span class="pl-k">=</span><span class="pl-v">arguments</span>,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,v<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,w<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>,<span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span> <span class="pl-en">x</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-smi">now</span><span class="pl-k">-</span>m;d<span class="pl-k">&lt;</span>e<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span>g<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(x,e<span class="pl-k">-</span>d)<span class="pl-k">:</span>(g<span class="pl-k">=</span><span class="pl-c1">null</span>,c<span class="pl-k">||</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Oa</span><span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(v,h)),g<span class="pl-k">||</span>(v<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-c1">null</span>)))};<span class="pl-k">return</span> <span class="pl-k">function</span>(){v<span class="pl-k">=</span>b;h<span class="pl-k">=</span>k;m<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-smi">now</span>;<span class="pl-k">var</span> q<span class="pl-k">=</span>c<span class="pl-k">&amp;&amp;!</span>g;g<span class="pl-k">||</span>(g<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(d,e));q<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">Oa</span><span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(v,h)),v<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> w}}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>disable<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-v">this</span>.<span class="pl-smi">Oa</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}]);<span class="pl-k">return</span> g}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>h},<span class="pl-k">function</span>(<span class="pl-smi">w</span>,<span class="pl-smi">v</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> <span class="pl-en">g</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>b[c];<span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">enumerable</span><span class="pl-k">||!</span><span class="pl-c1">1</span>;<span class="pl-smi">e</span>.<span class="pl-smi">configurable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">writable</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-c1">Object</span>.<span class="pl-en">defineProperty</span>(a,<span class="pl-smi">e</span>.<span class="pl-smi">key</span>,e)}}<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">e</span>){b<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>,b);e<span class="pl-k">&amp;&amp;</span><span class="pl-en">a</span>(c,e);<span class="pl-k">return</span> c}}(),a<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">12</span>);<span class="pl-en">v</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">c</span>,<span class="pl-smi">b</span>,<span class="pl-smi">g</span>,<span class="pl-smi">h</span>,<span class="pl-smi">r</span>,<span class="pl-smi">v</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-v">this</span> <span class="pl-k">instanceof</span> e))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Cannot call a class as a function<span class="pl-pds">&quot;</span></span>);<span class="pl-v">this</span>.<span class="pl-c1">Z</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-smi">gc</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-smi">dc</span><span class="pl-k">=</span>g;<span class="pl-v">this</span>.<span class="pl-smi">Qa</span><span class="pl-k">=</span>h;<span class="pl-v">this</span>.<span class="pl-smi">lb</span><span class="pl-k">=</span>v;<span class="pl-v">this</span>.<span class="pl-smi">ja</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Ba</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Ca</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Da</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">qa</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-smi">la</span><span class="pl-k">=</span>{};<span class="pl-v">this</span>.<span class="pl-c1">I</span><span class="pl-k">=</span>{};<span class="pl-smi">h</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">k</span>.<span class="pl-smi">qa</span>[<span class="pl-smi">a</span>.<span class="pl-smi">b</span>]<span class="pl-k">=</span>b;<span class="pl-smi">k</span>.<span class="pl-c1">I</span>[<span class="pl-smi">a</span>.<span class="pl-smi">b</span>]<span class="pl-k">=</span>{}});<span class="pl-smi">r</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">u</span>(b),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">B</span>(b);<span class="pl-smi">k</span>.<span class="pl-c1">I</span>[<span class="pl-smi">d</span>.<span class="pl-smi">b</span>][<span class="pl-smi">e</span>.<span class="pl-smi">b</span>]<span class="pl-k">=</span>b;<span class="pl-smi">k</span>.<span class="pl-smi">la</span>[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>]<span class="pl-k">=</span>c});<span class="pl-v">this</span>.<span class="pl-smi">ia</span><span class="pl-k">=</span>[];</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-v">this</span>.<span class="pl-smi">ha</span><span class="pl-k">=</span>[]}<span class="pl-en">g</span>(e,[{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_doRemoveNodes<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-smi">a</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">qa</span>[<span class="pl-smi">a</span>.<span class="pl-smi">b</span>])<span class="pl-smi">b</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">ca</span>.<span class="pl-en">Dc</span>(<span class="pl-smi">b</span>.<span class="pl-smi">qa</span>[<span class="pl-smi">a</span>.<span class="pl-smi">b</span>]),<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">qa</span>[<span class="pl-smi">a</span>.<span class="pl-smi">b</span>];<span class="pl-k">else</span> <span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">ia</span>.<span class="pl-c1">length</span>;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ia</span>[c]<span class="pl-k">===</span>a){<span class="pl-smi">b</span>.<span class="pl-smi">ia</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">1</span>);<span class="pl-k">break</span>}<span class="pl-smi">a</span>.<span class="pl-smi">Aa</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">b</span>;<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">b</span>}})}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_doRemoveEdges<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-smi">c</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">c</span>.<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">u</span>(c),g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">B</span>(c);<span class="pl-k">delete</span> (<span class="pl-smi">b</span>.<span class="pl-c1">I</span>[<span class="pl-smi">e</span>.<span class="pl-smi">b</span>]<span class="pl-k">||</span>{})[<span class="pl-smi">g</span>.<span class="pl-smi">b</span>];<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">la</span>[<span class="pl-smi">c</span>.<span class="pl-smi">b</span>])<span class="pl-smi">b</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">ca</span>.<span class="pl-en">Cc</span>(<span class="pl-smi">b</span>.<span class="pl-smi">la</span>[<span class="pl-smi">c</span>.<span class="pl-smi">b</span>]),<span class="pl-k">delete</span> <span class="pl-smi">b</span>.<span class="pl-smi">la</span>[<span class="pl-smi">c</span>.<span class="pl-smi">b</span>];<span class="pl-k">else</span> <span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">ha</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">ha</span>[e]<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">c){<span class="pl-smi">b</span>.<span class="pl-smi">ha</span>.<span class="pl-c1">splice</span>(e,<span class="pl-c1">1</span>);<span class="pl-k">break</span>}<span class="pl-smi">c</span>.<span class="pl-smi">Aa</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">b</span>;<span class="pl-k">delete</span> <span class="pl-smi">c</span>.<span class="pl-smi">b</span>}})}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_doAddEdges<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">la</span>[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">Na</span>([b]);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>)<span class="pl-en">console</span>.<span class="pl-c1">error</span>(b),<span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>This edge has been already added, if you want to add same edge twice, create new object with same properties<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{<span class="pl-smi">a</span>.<span class="pl-en">lb</span>(b);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ha</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(b)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b)}})}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_doAddNodes<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-smi">Ba</span>.<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-smi">qa</span>[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>]<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">cc</span>([b]);<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>)<span class="pl-en">console</span>.<span class="pl-c1">error</span>(b),</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-en">console</span>.<span class="pl-c1">error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>This node has been already added, if you want to add same node twice, create new object with same properties<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{<span class="pl-smi">a</span>.<span class="pl-en">lb</span>(b);<span class="pl-smi">a</span>.<span class="pl-c1">I</span>[<span class="pl-smi">b</span>.<span class="pl-smi">b</span>]<span class="pl-k">=</span>{};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ia</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span><span class="pl-smi">c</span>.<span class="pl-c1">indexOf</span>(b)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b)}})}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>addEdge<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">u</span>(c),e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">B</span>(c).<span class="pl-smi">b</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">b</span>;(<span class="pl-v">this</span>.<span class="pl-c1">I</span>[b]<span class="pl-k">||</span>{})[e]<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.<span class="pl-en">Na</span>([c]);<span class="pl-k">if</span>((<span class="pl-v">this</span>.<span class="pl-c1">I</span>[e]<span class="pl-k">||</span>{})[b])<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-c1">I</span>[e][b]),<span class="pl-v">this</span>.<span class="pl-en">Na</span>([<span class="pl-v">this</span>.<span class="pl-c1">I</span>[e][b]]),<span class="pl-v">this</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">push</span>(<span class="pl-v">this</span>.<span class="pl-c1">I</span>[b][e]<span class="pl-k">=</span>c),<span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">return</span> <span class="pl-v">this</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>addNode<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">Ba</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>removeNode<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">Da</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>removeEdge<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-v">this</span>.<span class="pl-smi">Ca</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> <span class="pl-v">this</span>}},{key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>applyChanges<span class="pl-pds">&quot;</span></span>,<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">Ca</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">Da</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">ja</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-v">this</span>.<span class="pl-smi">Ba</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>;<span class="pl-v">this</span>.<span class="pl-smi">ia</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">w</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">w</span>.<span class="pl-smi">a</span><span class="pl-k">:</span>[];<span class="pl-v">this</span>.<span class="pl-smi">ha</span><span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">w</span><span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">w</span>.<span class="pl-smi">i</span><span class="pl-k">:</span>[];<span class="pl-v">this</span>.<span class="pl-en">Na</span>(<span class="pl-v">this</span>.<span class="pl-smi">Ca</span>);<span class="pl-v">this</span>.<span class="pl-en">cc</span>(<span class="pl-v">this</span>.<span class="pl-smi">Da</span>);<span class="pl-v">this</span>.<span class="pl-en">Kc</span>();<span class="pl-v">this</span>.<span class="pl-en">Jc</span>();<span class="pl-v">this</span>.<span class="pl-smi">ja</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Ba</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Ca</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-smi">Da</span><span class="pl-k">=</span>[];<span class="pl-v">this</span>.<span class="pl-en">gc</span>();<span class="pl-v">this</span>.<span class="pl-c1">Z</span>.<span class="pl-smi">w</span>.<span class="pl-c1">set</span>(<span class="pl-v">this</span>.<span class="pl-smi">ia</span>,<span class="pl-v">this</span>.<span class="pl-smi">ha</span>);<span class="pl-v">this</span>.<span class="pl-en">dc</span>();<span class="pl-k">return</span> <span class="pl-v">this</span>}}]);<span class="pl-k">return</span> e}();<span class="pl-smi">w</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>v}]);</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">module</span>.<span class="pl-smi">f</span><span class="pl-k">=</span>ccNetViz);</td>
      </tr>
</table>

  </div>

</div>

<button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
<div id="jump-to-line" style="display:none">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form accept-charset="UTF-8" action="" class="js-jump-to-line-form" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
    <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
    <button type="submit" class="btn">Go</button>
</form></div>

  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>


    </div>
  </div>

    </div>

        <div class="container site-footer-container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links float-right">
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact GitHub</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage" class="site-footer-mark" title="GitHub">
      <svg aria-hidden="true" class="octicon octicon-mark-github" height="24" version="1.1" viewBox="0 0 16 16" width="24"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2016 <span title="1.04960s from github-fe135-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a href="https://help.github.com" data-ga-click="Footer, go to help, text:help">Help</a></li>
    </ul>
  </div>
</div>



    

    <div id="ajax-error-message" class="ajax-error-message flash flash-error">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
      <button type="button" class="flash-close js-flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
        <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
      </button>
      You can't perform that action at this time.
    </div>


      
      <script crossorigin="anonymous" integrity="sha256-q1D7/rLAuHSPor/tXQvMz8BrgKvykFhqfRxvI5AvXfM=" src="https://assets-cdn.github.com/assets/frameworks-ab50fbfeb2c0b8748fa2bfed5d0bcccfc06b80abf290586a7d1c6f23902f5df3.js"></script>
      <script async="async" crossorigin="anonymous" integrity="sha256-7ueovoPeAq1yt0hl7zaTSNcsvvC2zgdnMRyn0fqv1Ao=" src="https://assets-cdn.github.com/assets/github-eee7a8be83de02ad72b74865ef369348d72cbef0b6ce0767311ca7d1faafd40a.js"></script>
      
      
      
      
    <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
      <svg aria-hidden="true" class="octicon octicon-alert" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M8.865 1.52c-.18-.31-.51-.5-.87-.5s-.69.19-.87.5L.275 13.5c-.18.31-.18.69 0 1 .19.31.52.5.87.5h13.7c.36 0 .69-.19.86-.5.17-.31.18-.69.01-1L8.865 1.52zM8.995 13h-2v-2h2v2zm0-3h-2V6h2v4z"/></svg>
      <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
      <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
    </div>
    <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg aria-hidden="true" class="octicon octicon-x" height="16" version="1.1" viewBox="0 0 12 16" width="12"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z"/></svg>
    </button>
  </div>
</div>

  </body>
</html>

